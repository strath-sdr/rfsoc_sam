-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\mw_ssrconverter\mw_ssrconverter_dut.vhd
-- Created: 2020-12-22 10:57:23
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: mw_ssrconverter_dut
-- Source Path: mw_ssrconverter/mw_ssrconverter_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY mw_ssrconverter_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        Packet_Size                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        SSR_Mode                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        Valid_Real_In                     :   IN    std_logic;  -- ufix1
        Data_Real_In                      :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
        Valid_Imag_In                     :   IN    std_logic;  -- ufix1
        Data_Imag_In                      :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
        ce_out                            :   OUT   std_logic;  -- ufix1
        Valid_Real_Out                    :   OUT   std_logic;  -- ufix1
        Data_Real_Out                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
        User_Real_Out                     :   OUT   std_logic;  -- ufix1
        Last_Real_Out                     :   OUT   std_logic;  -- ufix1
        Valid_Imag_Out                    :   OUT   std_logic;  -- ufix1
        Data_Imag_Out                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
        User_Imag_Out                     :   OUT   std_logic;  -- ufix1
        Last_Imag_Out                     :   OUT   std_logic  -- ufix1
        );
END mw_ssrconverter_dut;


ARCHITECTURE rtl OF mw_ssrconverter_dut IS

  -- Component Declarations
  COMPONENT mw_ssrconverter_src_SSR_Subset_Converter
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          Packet_Size                     :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          SSR_Mode                        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Valid_Real_In                   :   IN    std_logic;  -- ufix1
          Data_Real_In                    :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
          Valid_Imag_In                   :   IN    std_logic;  -- ufix1
          Data_Imag_In                    :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
          ce_out                          :   OUT   std_logic;  -- ufix1
          Valid_Real_Out                  :   OUT   std_logic;  -- ufix1
          Data_Real_Out                   :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
          User_Real_Out                   :   OUT   std_logic;  -- ufix1
          Last_Real_Out                   :   OUT   std_logic;  -- ufix1
          Valid_Imag_Out                  :   OUT   std_logic;  -- ufix1
          Data_Imag_Out                   :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
          User_Imag_Out                   :   OUT   std_logic;  -- ufix1
          Last_Imag_Out                   :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : mw_ssrconverter_src_SSR_Subset_Converter
    USE ENTITY work.mw_ssrconverter_src_SSR_Subset_Converter(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL Valid_Real_In_sig                : std_logic;  -- ufix1
  SIGNAL Valid_Imag_In_sig                : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL Valid_Real_Out_sig               : std_logic;  -- ufix1
  SIGNAL Data_Real_Out_sig                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL User_Real_Out_sig                : std_logic;  -- ufix1
  SIGNAL Last_Real_Out_sig                : std_logic;  -- ufix1
  SIGNAL Valid_Imag_Out_sig               : std_logic;  -- ufix1
  SIGNAL Data_Imag_Out_sig                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL User_Imag_Out_sig                : std_logic;  -- ufix1
  SIGNAL Last_Imag_Out_sig                : std_logic;  -- ufix1

BEGIN
  u_mw_ssrconverter_src_SSR_Subset_Converter : mw_ssrconverter_src_SSR_Subset_Converter
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              Packet_Size => Packet_Size,  -- ufix32
              SSR_Mode => SSR_Mode,  -- ufix32
              Valid_Real_In => Valid_Real_In_sig,  -- ufix1
              Data_Real_In => Data_Real_In,  -- ufix128
              Valid_Imag_In => Valid_Imag_In_sig,  -- ufix1
              Data_Imag_In => Data_Imag_In,  -- ufix128
              ce_out => ce_out_sig,  -- ufix1
              Valid_Real_Out => Valid_Real_Out_sig,  -- ufix1
              Data_Real_Out => Data_Real_Out_sig,  -- ufix16
              User_Real_Out => User_Real_Out_sig,  -- ufix1
              Last_Real_Out => Last_Real_Out_sig,  -- ufix1
              Valid_Imag_Out => Valid_Imag_Out_sig,  -- ufix1
              Data_Imag_Out => Data_Imag_Out_sig,  -- ufix16
              User_Imag_Out => User_Imag_Out_sig,  -- ufix1
              Last_Imag_Out => Last_Imag_Out_sig  -- ufix1
              );

  Valid_Real_In_sig <= Valid_Real_In;

  Valid_Imag_In_sig <= Valid_Imag_In;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  Valid_Real_Out <= Valid_Real_Out_sig;

  Data_Real_Out <= Data_Real_Out_sig;

  User_Real_Out <= User_Real_Out_sig;

  Last_Real_Out <= Last_Real_Out_sig;

  Valid_Imag_Out <= Valid_Imag_Out_sig;

  Data_Imag_Out <= Data_Imag_Out_sig;

  User_Imag_Out <= User_Imag_Out_sig;

  Last_Imag_Out <= Last_Imag_Out_sig;

END rtl;

