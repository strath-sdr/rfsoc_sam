-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\mw_window\mw_window_axi4_master_wr.vhd
-- Created: 2020-12-24 09:34:25
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: mw_window_axi4_master_wr
-- Source Path: mw_window/mw_window_axi4_master_wr
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY mw_window_axi4_master_wr IS
  PORT( AXI4_Master_Wr_AWREADY            :   IN    std_logic;  -- ufix1
        AXI4_Master_Wr_WREADY             :   IN    std_logic;  -- ufix1
        AXI4_Master_Wr_BID                :   IN    std_logic;  -- ufix1
        AXI4_Master_Wr_BRESP              :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Master_Wr_BVALID             :   IN    std_logic;  -- ufix1
        AXI4_Master_Wr_AWID               :   OUT   std_logic;  -- ufix1
        AXI4_Master_Wr_AWADDR             :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Master_Wr_AWLEN              :   OUT   std_logic_vector(7 DOWNTO 0);  -- ufix8
        AXI4_Master_Wr_AWSIZE             :   OUT   std_logic_vector(2 DOWNTO 0);  -- ufix3
        AXI4_Master_Wr_AWBURST            :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Master_Wr_AWLOCK             :   OUT   std_logic;  -- ufix1
        AXI4_Master_Wr_AWCACHE            :   OUT   std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Master_Wr_AWPROT             :   OUT   std_logic_vector(2 DOWNTO 0);  -- ufix3
        AXI4_Master_Wr_AWVALID            :   OUT   std_logic;  -- ufix1
        AXI4_Master_Wr_WDATA              :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Master_Wr_WSTRB              :   OUT   std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Master_Wr_WLAST              :   OUT   std_logic;  -- ufix1
        AXI4_Master_Wr_WVALID             :   OUT   std_logic;  -- ufix1
        AXI4_Master_Wr_BREADY             :   OUT   std_logic  -- ufix1
        );
END mw_window_axi4_master_wr;


ARCHITECTURE rtl OF mw_window_axi4_master_wr IS

  -- Signals
  SIGNAL const_0_1                        : std_logic;  -- ufix1
  SIGNAL const_awaddr                     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL const_awlen                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL const_awsize                     : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL const_1_2                        : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL const_3_4                        : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL const_0_3                        : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL const_awlen_1                    : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL const_wstrb                      : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL const_1_1                        : std_logic;  -- ufix1

BEGIN
  const_0_1 <= '0';

  const_awaddr <= to_unsigned(0, 32);

  AXI4_Master_Wr_AWADDR <= std_logic_vector(const_awaddr);

  const_awlen <= to_unsigned(16#00#, 8);

  AXI4_Master_Wr_AWLEN <= std_logic_vector(const_awlen);

  const_awsize <= to_unsigned(16#2#, 3);

  AXI4_Master_Wr_AWSIZE <= std_logic_vector(const_awsize);

  const_1_2 <= to_unsigned(16#1#, 2);

  AXI4_Master_Wr_AWBURST <= std_logic_vector(const_1_2);

  const_3_4 <= to_unsigned(16#3#, 4);

  AXI4_Master_Wr_AWCACHE <= std_logic_vector(const_3_4);

  const_0_3 <= to_unsigned(16#0#, 3);

  AXI4_Master_Wr_AWPROT <= std_logic_vector(const_0_3);

  const_awlen_1 <= to_unsigned(0, 32);

  AXI4_Master_Wr_WDATA <= std_logic_vector(const_awlen_1);

  const_wstrb <= to_unsigned(16#F#, 4);

  AXI4_Master_Wr_WSTRB <= std_logic_vector(const_wstrb);

  const_1_1 <= '1';

  AXI4_Master_Wr_AWID <= const_0_1;

  AXI4_Master_Wr_AWLOCK <= const_0_1;

  AXI4_Master_Wr_AWVALID <= const_0_1;

  AXI4_Master_Wr_WLAST <= const_0_1;

  AXI4_Master_Wr_WVALID <= const_0_1;

  AXI4_Master_Wr_BREADY <= const_1_1;

END rtl;

