-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\mw_transmitter\mw_transmitter_src_Transmitter.vhd
-- Created: 2020-12-16 17:01:18
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 3.90625e-09
-- Target subsystem base rate: 3.90625e-09
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: mw_transmitter_src_Transmitter
-- Source Path: mw_transmitter/Transmitter
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.mw_transmitter_src_Transmitter_pkg.ALL;

ENTITY mw_transmitter_src_Transmitter IS
  PORT( Enable                            :   IN    std_logic;
        Value                             :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Valid                             :   OUT   std_logic;
        Data                              :   OUT   std_logic_vector(127 DOWNTO 0)  -- ufix128
        );
END mw_transmitter_src_Transmitter;


ARCHITECTURE rtl OF mw_transmitter_src_Transmitter IS

  -- Component Declarations
  COMPONENT mw_transmitter_src_Vector_to_SSR_Low
    PORT( Vector                          :   IN    vector_of_std_logic_vector32(0 TO 3);  -- uint32 [4]
          SSR                             :   OUT   std_logic_vector(127 DOWNTO 0)  -- ufix128
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : mw_transmitter_src_Vector_to_SSR_Low
    USE ENTITY work.mw_transmitter_src_Vector_to_SSR_Low(rtl);

  -- Signals
  SIGNAL Constant_out1                    : std_logic;
  SIGNAL Constant2_out1                   : vector_of_signed16(0 TO 3);  -- sfix16_En15 [4]
  SIGNAL Value_unsigned                   : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Bit_Slice_out1                   : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Data_Type_Conversion_out1        : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Matrix_Concatenate_out1_re       : vector_of_signed16(0 TO 3);  -- sfix16_En15 [4]
  SIGNAL Matrix_Concatenate_out1_im       : vector_of_signed16(0 TO 3);  -- sfix16_En15 [4]
  SIGNAL Bit_Slice1_out1                  : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Data_Type_Conversion1_out1       : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Multiport_Switch_out1_re         : vector_of_signed16(0 TO 3);  -- sfix16_En15 [4]
  SIGNAL Multiport_Switch_out1_im         : vector_of_signed16(0 TO 3);  -- sfix16_En15 [4]
  SIGNAL Bit_Concat_out1                  : vector_of_unsigned32(0 TO 3);  -- uint32 [4]
  SIGNAL Bit_Concat_out1_1                : vector_of_std_logic_vector32(0 TO 3);  -- ufix32 [4]
  SIGNAL y                                : std_logic_vector(127 DOWNTO 0);  -- ufix128

BEGIN
  u_Vector_to_SSR_Low : mw_transmitter_src_Vector_to_SSR_Low
    PORT MAP( Vector => Bit_Concat_out1_1,  -- uint32 [4]
              SSR => y  -- ufix128
              );

  Constant_out1 <= '1';

  Constant2_out1(0) <= to_signed(16#0000#, 16);
  Constant2_out1(1) <= to_signed(16#0000#, 16);
  Constant2_out1(2) <= to_signed(16#0000#, 16);
  Constant2_out1(3) <= to_signed(16#0000#, 16);

  Value_unsigned <= unsigned(Value);

  Bit_Slice_out1 <= Value_unsigned(15 DOWNTO 0);

  Data_Type_Conversion_out1 <= signed(Bit_Slice_out1);

  Matrix_Concatenate_out1_re(0) <= Data_Type_Conversion_out1;
  Matrix_Concatenate_out1_re(1) <= Data_Type_Conversion_out1;
  Matrix_Concatenate_out1_re(2) <= Data_Type_Conversion_out1;
  Matrix_Concatenate_out1_re(3) <= Data_Type_Conversion_out1;

  Bit_Slice1_out1 <= Value_unsigned(31 DOWNTO 16);

  Data_Type_Conversion1_out1 <= signed(Bit_Slice1_out1);

  Matrix_Concatenate_out1_im(0) <= Data_Type_Conversion1_out1;
  Matrix_Concatenate_out1_im(1) <= Data_Type_Conversion1_out1;
  Matrix_Concatenate_out1_im(2) <= Data_Type_Conversion1_out1;
  Matrix_Concatenate_out1_im(3) <= Data_Type_Conversion1_out1;

  
  Multiport_Switch_out1_re <= Constant2_out1 WHEN Enable = '0' ELSE
      Matrix_Concatenate_out1_re;
  
  Multiport_Switch_out1_im <= Constant2_out1 WHEN Enable = '0' ELSE
      Matrix_Concatenate_out1_im;


  Bit_Concat_out1_gen: FOR k IN 0 TO 3 GENERATE
    Bit_Concat_out1(k) <= unsigned(Multiport_Switch_out1_im(k)) & unsigned(Multiport_Switch_out1_re(k));
  END GENERATE Bit_Concat_out1_gen;


  outputgen: FOR k1 IN 0 TO 3 GENERATE
    Bit_Concat_out1_1(k1) <= std_logic_vector(Bit_Concat_out1(k1));
  END GENERATE;

  Valid <= Constant_out1;

  Data <= y;

END rtl;

