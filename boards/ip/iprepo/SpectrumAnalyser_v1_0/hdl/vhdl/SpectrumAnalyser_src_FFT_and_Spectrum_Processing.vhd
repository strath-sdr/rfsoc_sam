-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\spectrum_analyser\SpectrumAnalyser_src_FFT_and_Spectrum_Processing.vhd
-- Created: 2021-01-22 11:44:23
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: SpectrumAnalyser_src_FFT_and_Spectrum_Processing
-- Source Path: spectrum_analyser/Spectrum Analyser/Spectrum Analyser/Spectrum Analyser Core/FFT and Spectrum Processing
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.SpectrumAnalyser_src_Spectrum_Analyser_pkg.ALL;

ENTITY SpectrumAnalyser_src_FFT_and_Spectrum_Processing IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_16_0                        :   IN    std_logic;
        Units_rsvd                        :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Type_rsvd                         :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Vrms                              :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Type_Scale                        :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Power_Scale                       :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Selector                          :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Valid_Real                        :   IN    std_logic;
        Data_Real                         :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        Last_Real                         :   IN    std_logic;
        User_Real                         :   IN    std_logic;
        Valid_Imag                        :   IN    std_logic;
        Data_Imag                         :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        Last_Imag                         :   IN    std_logic;
        User_Imag                         :   IN    std_logic;
        Valid_Out                         :   OUT   std_logic;
        Data_Out                          :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        End_Out                           :   OUT   std_logic;
        Start_Out                         :   OUT   std_logic
        );
END SpectrumAnalyser_src_FFT_and_Spectrum_Processing;


ARCHITECTURE rtl OF SpectrumAnalyser_src_FFT_and_Spectrum_Processing IS

  -- Component Declarations
  COMPONENT SpectrumAnalyser_src_Convert_Data
    PORT( Valid_Real                      :   IN    std_logic;
          Valid_Imag                      :   IN    std_logic;
          Data_Real                       :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          Data_Imag                       :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          Data_Out_re                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          Data_Out_im                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          Valid                           :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT SpectrumAnalyser_src_FFT_Core
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_16_0                      :   IN    std_logic;
          Data_In_re                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          Data_In_im                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          Valid_In                        :   IN    std_logic;
          Selector                        :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          Data_Out_re                     :   OUT   std_logic_vector(28 DOWNTO 0);  -- sfix29_En15
          Data_Out_im                     :   OUT   std_logic_vector(28 DOWNTO 0);  -- sfix29_En15
          Start                           :   OUT   std_logic;
          End_rsvd                        :   OUT   std_logic;
          Valid_Out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT SpectrumAnalyser_src_Spectrum_Options
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_16_0                      :   IN    std_logic;
          Units_rsvd                      :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Type_rsvd                       :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Vrms                            :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Data_In_re                      :   IN    std_logic_vector(28 DOWNTO 0);  -- sfix29_En15
          Data_In_im                      :   IN    std_logic_vector(28 DOWNTO 0);  -- sfix29_En15
          Start_In                        :   IN    std_logic;
          End_In                          :   IN    std_logic;
          Valid_In                        :   IN    std_logic;
          Type_Scale                      :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Power_Scale                     :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Data_Out                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          Start_Out                       :   OUT   std_logic;
          End_Out                         :   OUT   std_logic;
          Valid_Out                       :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : SpectrumAnalyser_src_Convert_Data
    USE ENTITY work.SpectrumAnalyser_src_Convert_Data(rtl);

  FOR ALL : SpectrumAnalyser_src_FFT_Core
    USE ENTITY work.SpectrumAnalyser_src_FFT_Core(rtl);

  FOR ALL : SpectrumAnalyser_src_Spectrum_Options
    USE ENTITY work.SpectrumAnalyser_src_Spectrum_Options(rtl);

  -- Signals
  SIGNAL Selector_unsigned                : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Bit_Slice_out1                   : std_logic;  -- ufix1
  SIGNAL Convert_Data_out1_re             : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Convert_Data_out1_im             : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Convert_Data_out2                : std_logic;
  SIGNAL Bit_Slice1_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL FFT_Core_out1_re                 : std_logic_vector(28 DOWNTO 0);  -- ufix29
  SIGNAL FFT_Core_out1_im                 : std_logic_vector(28 DOWNTO 0);  -- ufix29
  SIGNAL FFT_Core_out2                    : std_logic;
  SIGNAL FFT_Core_out3                    : std_logic;
  SIGNAL FFT_Core_out4                    : std_logic;
  SIGNAL Spectrum_Options_out1            : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Spectrum_Options_out2            : std_logic;
  SIGNAL Spectrum_Options_out3            : std_logic;
  SIGNAL Spectrum_Options_out4            : std_logic;
  SIGNAL Multiport_Switch3_out1           : std_logic;
  SIGNAL delayMatch_reg                   : std_logic_vector(0 TO 147);  -- ufix1 [148]
  SIGNAL delayMatch_reg_next              : std_logic_vector(0 TO 147);  -- ufix1 [148]
  SIGNAL Bit_Slice_out1_1                 : std_logic;  -- ufix1
  SIGNAL Spectrum_Options_out1_unsigned   : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Data_Imag_unsigned               : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Data_Real_unsigned               : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Bit_Concat_out1                  : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL delayMatch1_reg                  : vector_of_unsigned32(0 TO 147);  -- ufix32 [148]
  SIGNAL delayMatch1_reg_next             : vector_of_unsigned32(0 TO 147);  -- ufix32 [148]
  SIGNAL Bit_Concat_out1_1                : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Multiport_Switch_out1            : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL AND_out1                         : std_logic;
  SIGNAL Multiport_Switch2_out1           : std_logic;
  SIGNAL AND1_out1                        : std_logic;
  SIGNAL Multiport_Switch1_out1           : std_logic;

BEGIN
  u_Convert_Data : SpectrumAnalyser_src_Convert_Data
    PORT MAP( Valid_Real => Valid_Real,
              Valid_Imag => Valid_Imag,
              Data_Real => Data_Real,  -- uint16
              Data_Imag => Data_Imag,  -- uint16
              Data_Out_re => Convert_Data_out1_re,  -- sfix16_En15
              Data_Out_im => Convert_Data_out1_im,  -- sfix16_En15
              Valid => Convert_Data_out2
              );

  u_FFT_Core : SpectrumAnalyser_src_FFT_Core
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              Data_In_re => Convert_Data_out1_re,  -- sfix16_En15
              Data_In_im => Convert_Data_out1_im,  -- sfix16_En15
              Valid_In => Convert_Data_out2,
              Selector => std_logic_vector(Bit_Slice1_out1),  -- uint8
              Data_Out_re => FFT_Core_out1_re,  -- sfix29_En15
              Data_Out_im => FFT_Core_out1_im,  -- sfix29_En15
              Start => FFT_Core_out2,
              End_rsvd => FFT_Core_out3,
              Valid_Out => FFT_Core_out4
              );

  u_Spectrum_Options : SpectrumAnalyser_src_Spectrum_Options
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              Units_rsvd => Units_rsvd,  -- uint32
              Type_rsvd => Type_rsvd,  -- uint32
              Vrms => Vrms,  -- uint32
              Data_In_re => FFT_Core_out1_re,  -- sfix29_En15
              Data_In_im => FFT_Core_out1_im,  -- sfix29_En15
              Start_In => FFT_Core_out2,
              End_In => FFT_Core_out3,
              Valid_In => FFT_Core_out4,
              Type_Scale => Type_Scale,  -- uint32
              Power_Scale => Power_Scale,  -- uint32
              Data_Out => Spectrum_Options_out1,  -- uint32
              Start_Out => Spectrum_Options_out2,
              End_Out => Spectrum_Options_out3,
              Valid_Out => Spectrum_Options_out4
              );

  Selector_unsigned <= unsigned(Selector);

  Bit_Slice_out1 <= Selector_unsigned(8);

  Bit_Slice1_out1 <= Selector_unsigned(7 DOWNTO 0);

  
  Multiport_Switch3_out1 <= Spectrum_Options_out4 WHEN Bit_Slice_out1 = '0' ELSE
      Convert_Data_out2;

  Valid_Out <= Multiport_Switch3_out1;

  delayMatch_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delayMatch_reg(0) <= '0';
      delayMatch_reg(1) <= '0';
      delayMatch_reg(2) <= '0';
      delayMatch_reg(3) <= '0';
      delayMatch_reg(4) <= '0';
      delayMatch_reg(5) <= '0';
      delayMatch_reg(6) <= '0';
      delayMatch_reg(7) <= '0';
      delayMatch_reg(8) <= '0';
      delayMatch_reg(9) <= '0';
      delayMatch_reg(10) <= '0';
      delayMatch_reg(11) <= '0';
      delayMatch_reg(12) <= '0';
      delayMatch_reg(13) <= '0';
      delayMatch_reg(14) <= '0';
      delayMatch_reg(15) <= '0';
      delayMatch_reg(16) <= '0';
      delayMatch_reg(17) <= '0';
      delayMatch_reg(18) <= '0';
      delayMatch_reg(19) <= '0';
      delayMatch_reg(20) <= '0';
      delayMatch_reg(21) <= '0';
      delayMatch_reg(22) <= '0';
      delayMatch_reg(23) <= '0';
      delayMatch_reg(24) <= '0';
      delayMatch_reg(25) <= '0';
      delayMatch_reg(26) <= '0';
      delayMatch_reg(27) <= '0';
      delayMatch_reg(28) <= '0';
      delayMatch_reg(29) <= '0';
      delayMatch_reg(30) <= '0';
      delayMatch_reg(31) <= '0';
      delayMatch_reg(32) <= '0';
      delayMatch_reg(33) <= '0';
      delayMatch_reg(34) <= '0';
      delayMatch_reg(35) <= '0';
      delayMatch_reg(36) <= '0';
      delayMatch_reg(37) <= '0';
      delayMatch_reg(38) <= '0';
      delayMatch_reg(39) <= '0';
      delayMatch_reg(40) <= '0';
      delayMatch_reg(41) <= '0';
      delayMatch_reg(42) <= '0';
      delayMatch_reg(43) <= '0';
      delayMatch_reg(44) <= '0';
      delayMatch_reg(45) <= '0';
      delayMatch_reg(46) <= '0';
      delayMatch_reg(47) <= '0';
      delayMatch_reg(48) <= '0';
      delayMatch_reg(49) <= '0';
      delayMatch_reg(50) <= '0';
      delayMatch_reg(51) <= '0';
      delayMatch_reg(52) <= '0';
      delayMatch_reg(53) <= '0';
      delayMatch_reg(54) <= '0';
      delayMatch_reg(55) <= '0';
      delayMatch_reg(56) <= '0';
      delayMatch_reg(57) <= '0';
      delayMatch_reg(58) <= '0';
      delayMatch_reg(59) <= '0';
      delayMatch_reg(60) <= '0';
      delayMatch_reg(61) <= '0';
      delayMatch_reg(62) <= '0';
      delayMatch_reg(63) <= '0';
      delayMatch_reg(64) <= '0';
      delayMatch_reg(65) <= '0';
      delayMatch_reg(66) <= '0';
      delayMatch_reg(67) <= '0';
      delayMatch_reg(68) <= '0';
      delayMatch_reg(69) <= '0';
      delayMatch_reg(70) <= '0';
      delayMatch_reg(71) <= '0';
      delayMatch_reg(72) <= '0';
      delayMatch_reg(73) <= '0';
      delayMatch_reg(74) <= '0';
      delayMatch_reg(75) <= '0';
      delayMatch_reg(76) <= '0';
      delayMatch_reg(77) <= '0';
      delayMatch_reg(78) <= '0';
      delayMatch_reg(79) <= '0';
      delayMatch_reg(80) <= '0';
      delayMatch_reg(81) <= '0';
      delayMatch_reg(82) <= '0';
      delayMatch_reg(83) <= '0';
      delayMatch_reg(84) <= '0';
      delayMatch_reg(85) <= '0';
      delayMatch_reg(86) <= '0';
      delayMatch_reg(87) <= '0';
      delayMatch_reg(88) <= '0';
      delayMatch_reg(89) <= '0';
      delayMatch_reg(90) <= '0';
      delayMatch_reg(91) <= '0';
      delayMatch_reg(92) <= '0';
      delayMatch_reg(93) <= '0';
      delayMatch_reg(94) <= '0';
      delayMatch_reg(95) <= '0';
      delayMatch_reg(96) <= '0';
      delayMatch_reg(97) <= '0';
      delayMatch_reg(98) <= '0';
      delayMatch_reg(99) <= '0';
      delayMatch_reg(100) <= '0';
      delayMatch_reg(101) <= '0';
      delayMatch_reg(102) <= '0';
      delayMatch_reg(103) <= '0';
      delayMatch_reg(104) <= '0';
      delayMatch_reg(105) <= '0';
      delayMatch_reg(106) <= '0';
      delayMatch_reg(107) <= '0';
      delayMatch_reg(108) <= '0';
      delayMatch_reg(109) <= '0';
      delayMatch_reg(110) <= '0';
      delayMatch_reg(111) <= '0';
      delayMatch_reg(112) <= '0';
      delayMatch_reg(113) <= '0';
      delayMatch_reg(114) <= '0';
      delayMatch_reg(115) <= '0';
      delayMatch_reg(116) <= '0';
      delayMatch_reg(117) <= '0';
      delayMatch_reg(118) <= '0';
      delayMatch_reg(119) <= '0';
      delayMatch_reg(120) <= '0';
      delayMatch_reg(121) <= '0';
      delayMatch_reg(122) <= '0';
      delayMatch_reg(123) <= '0';
      delayMatch_reg(124) <= '0';
      delayMatch_reg(125) <= '0';
      delayMatch_reg(126) <= '0';
      delayMatch_reg(127) <= '0';
      delayMatch_reg(128) <= '0';
      delayMatch_reg(129) <= '0';
      delayMatch_reg(130) <= '0';
      delayMatch_reg(131) <= '0';
      delayMatch_reg(132) <= '0';
      delayMatch_reg(133) <= '0';
      delayMatch_reg(134) <= '0';
      delayMatch_reg(135) <= '0';
      delayMatch_reg(136) <= '0';
      delayMatch_reg(137) <= '0';
      delayMatch_reg(138) <= '0';
      delayMatch_reg(139) <= '0';
      delayMatch_reg(140) <= '0';
      delayMatch_reg(141) <= '0';
      delayMatch_reg(142) <= '0';
      delayMatch_reg(143) <= '0';
      delayMatch_reg(144) <= '0';
      delayMatch_reg(145) <= '0';
      delayMatch_reg(146) <= '0';
      delayMatch_reg(147) <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        delayMatch_reg(0) <= delayMatch_reg_next(0);
        delayMatch_reg(1) <= delayMatch_reg_next(1);
        delayMatch_reg(2) <= delayMatch_reg_next(2);
        delayMatch_reg(3) <= delayMatch_reg_next(3);
        delayMatch_reg(4) <= delayMatch_reg_next(4);
        delayMatch_reg(5) <= delayMatch_reg_next(5);
        delayMatch_reg(6) <= delayMatch_reg_next(6);
        delayMatch_reg(7) <= delayMatch_reg_next(7);
        delayMatch_reg(8) <= delayMatch_reg_next(8);
        delayMatch_reg(9) <= delayMatch_reg_next(9);
        delayMatch_reg(10) <= delayMatch_reg_next(10);
        delayMatch_reg(11) <= delayMatch_reg_next(11);
        delayMatch_reg(12) <= delayMatch_reg_next(12);
        delayMatch_reg(13) <= delayMatch_reg_next(13);
        delayMatch_reg(14) <= delayMatch_reg_next(14);
        delayMatch_reg(15) <= delayMatch_reg_next(15);
        delayMatch_reg(16) <= delayMatch_reg_next(16);
        delayMatch_reg(17) <= delayMatch_reg_next(17);
        delayMatch_reg(18) <= delayMatch_reg_next(18);
        delayMatch_reg(19) <= delayMatch_reg_next(19);
        delayMatch_reg(20) <= delayMatch_reg_next(20);
        delayMatch_reg(21) <= delayMatch_reg_next(21);
        delayMatch_reg(22) <= delayMatch_reg_next(22);
        delayMatch_reg(23) <= delayMatch_reg_next(23);
        delayMatch_reg(24) <= delayMatch_reg_next(24);
        delayMatch_reg(25) <= delayMatch_reg_next(25);
        delayMatch_reg(26) <= delayMatch_reg_next(26);
        delayMatch_reg(27) <= delayMatch_reg_next(27);
        delayMatch_reg(28) <= delayMatch_reg_next(28);
        delayMatch_reg(29) <= delayMatch_reg_next(29);
        delayMatch_reg(30) <= delayMatch_reg_next(30);
        delayMatch_reg(31) <= delayMatch_reg_next(31);
        delayMatch_reg(32) <= delayMatch_reg_next(32);
        delayMatch_reg(33) <= delayMatch_reg_next(33);
        delayMatch_reg(34) <= delayMatch_reg_next(34);
        delayMatch_reg(35) <= delayMatch_reg_next(35);
        delayMatch_reg(36) <= delayMatch_reg_next(36);
        delayMatch_reg(37) <= delayMatch_reg_next(37);
        delayMatch_reg(38) <= delayMatch_reg_next(38);
        delayMatch_reg(39) <= delayMatch_reg_next(39);
        delayMatch_reg(40) <= delayMatch_reg_next(40);
        delayMatch_reg(41) <= delayMatch_reg_next(41);
        delayMatch_reg(42) <= delayMatch_reg_next(42);
        delayMatch_reg(43) <= delayMatch_reg_next(43);
        delayMatch_reg(44) <= delayMatch_reg_next(44);
        delayMatch_reg(45) <= delayMatch_reg_next(45);
        delayMatch_reg(46) <= delayMatch_reg_next(46);
        delayMatch_reg(47) <= delayMatch_reg_next(47);
        delayMatch_reg(48) <= delayMatch_reg_next(48);
        delayMatch_reg(49) <= delayMatch_reg_next(49);
        delayMatch_reg(50) <= delayMatch_reg_next(50);
        delayMatch_reg(51) <= delayMatch_reg_next(51);
        delayMatch_reg(52) <= delayMatch_reg_next(52);
        delayMatch_reg(53) <= delayMatch_reg_next(53);
        delayMatch_reg(54) <= delayMatch_reg_next(54);
        delayMatch_reg(55) <= delayMatch_reg_next(55);
        delayMatch_reg(56) <= delayMatch_reg_next(56);
        delayMatch_reg(57) <= delayMatch_reg_next(57);
        delayMatch_reg(58) <= delayMatch_reg_next(58);
        delayMatch_reg(59) <= delayMatch_reg_next(59);
        delayMatch_reg(60) <= delayMatch_reg_next(60);
        delayMatch_reg(61) <= delayMatch_reg_next(61);
        delayMatch_reg(62) <= delayMatch_reg_next(62);
        delayMatch_reg(63) <= delayMatch_reg_next(63);
        delayMatch_reg(64) <= delayMatch_reg_next(64);
        delayMatch_reg(65) <= delayMatch_reg_next(65);
        delayMatch_reg(66) <= delayMatch_reg_next(66);
        delayMatch_reg(67) <= delayMatch_reg_next(67);
        delayMatch_reg(68) <= delayMatch_reg_next(68);
        delayMatch_reg(69) <= delayMatch_reg_next(69);
        delayMatch_reg(70) <= delayMatch_reg_next(70);
        delayMatch_reg(71) <= delayMatch_reg_next(71);
        delayMatch_reg(72) <= delayMatch_reg_next(72);
        delayMatch_reg(73) <= delayMatch_reg_next(73);
        delayMatch_reg(74) <= delayMatch_reg_next(74);
        delayMatch_reg(75) <= delayMatch_reg_next(75);
        delayMatch_reg(76) <= delayMatch_reg_next(76);
        delayMatch_reg(77) <= delayMatch_reg_next(77);
        delayMatch_reg(78) <= delayMatch_reg_next(78);
        delayMatch_reg(79) <= delayMatch_reg_next(79);
        delayMatch_reg(80) <= delayMatch_reg_next(80);
        delayMatch_reg(81) <= delayMatch_reg_next(81);
        delayMatch_reg(82) <= delayMatch_reg_next(82);
        delayMatch_reg(83) <= delayMatch_reg_next(83);
        delayMatch_reg(84) <= delayMatch_reg_next(84);
        delayMatch_reg(85) <= delayMatch_reg_next(85);
        delayMatch_reg(86) <= delayMatch_reg_next(86);
        delayMatch_reg(87) <= delayMatch_reg_next(87);
        delayMatch_reg(88) <= delayMatch_reg_next(88);
        delayMatch_reg(89) <= delayMatch_reg_next(89);
        delayMatch_reg(90) <= delayMatch_reg_next(90);
        delayMatch_reg(91) <= delayMatch_reg_next(91);
        delayMatch_reg(92) <= delayMatch_reg_next(92);
        delayMatch_reg(93) <= delayMatch_reg_next(93);
        delayMatch_reg(94) <= delayMatch_reg_next(94);
        delayMatch_reg(95) <= delayMatch_reg_next(95);
        delayMatch_reg(96) <= delayMatch_reg_next(96);
        delayMatch_reg(97) <= delayMatch_reg_next(97);
        delayMatch_reg(98) <= delayMatch_reg_next(98);
        delayMatch_reg(99) <= delayMatch_reg_next(99);
        delayMatch_reg(100) <= delayMatch_reg_next(100);
        delayMatch_reg(101) <= delayMatch_reg_next(101);
        delayMatch_reg(102) <= delayMatch_reg_next(102);
        delayMatch_reg(103) <= delayMatch_reg_next(103);
        delayMatch_reg(104) <= delayMatch_reg_next(104);
        delayMatch_reg(105) <= delayMatch_reg_next(105);
        delayMatch_reg(106) <= delayMatch_reg_next(106);
        delayMatch_reg(107) <= delayMatch_reg_next(107);
        delayMatch_reg(108) <= delayMatch_reg_next(108);
        delayMatch_reg(109) <= delayMatch_reg_next(109);
        delayMatch_reg(110) <= delayMatch_reg_next(110);
        delayMatch_reg(111) <= delayMatch_reg_next(111);
        delayMatch_reg(112) <= delayMatch_reg_next(112);
        delayMatch_reg(113) <= delayMatch_reg_next(113);
        delayMatch_reg(114) <= delayMatch_reg_next(114);
        delayMatch_reg(115) <= delayMatch_reg_next(115);
        delayMatch_reg(116) <= delayMatch_reg_next(116);
        delayMatch_reg(117) <= delayMatch_reg_next(117);
        delayMatch_reg(118) <= delayMatch_reg_next(118);
        delayMatch_reg(119) <= delayMatch_reg_next(119);
        delayMatch_reg(120) <= delayMatch_reg_next(120);
        delayMatch_reg(121) <= delayMatch_reg_next(121);
        delayMatch_reg(122) <= delayMatch_reg_next(122);
        delayMatch_reg(123) <= delayMatch_reg_next(123);
        delayMatch_reg(124) <= delayMatch_reg_next(124);
        delayMatch_reg(125) <= delayMatch_reg_next(125);
        delayMatch_reg(126) <= delayMatch_reg_next(126);
        delayMatch_reg(127) <= delayMatch_reg_next(127);
        delayMatch_reg(128) <= delayMatch_reg_next(128);
        delayMatch_reg(129) <= delayMatch_reg_next(129);
        delayMatch_reg(130) <= delayMatch_reg_next(130);
        delayMatch_reg(131) <= delayMatch_reg_next(131);
        delayMatch_reg(132) <= delayMatch_reg_next(132);
        delayMatch_reg(133) <= delayMatch_reg_next(133);
        delayMatch_reg(134) <= delayMatch_reg_next(134);
        delayMatch_reg(135) <= delayMatch_reg_next(135);
        delayMatch_reg(136) <= delayMatch_reg_next(136);
        delayMatch_reg(137) <= delayMatch_reg_next(137);
        delayMatch_reg(138) <= delayMatch_reg_next(138);
        delayMatch_reg(139) <= delayMatch_reg_next(139);
        delayMatch_reg(140) <= delayMatch_reg_next(140);
        delayMatch_reg(141) <= delayMatch_reg_next(141);
        delayMatch_reg(142) <= delayMatch_reg_next(142);
        delayMatch_reg(143) <= delayMatch_reg_next(143);
        delayMatch_reg(144) <= delayMatch_reg_next(144);
        delayMatch_reg(145) <= delayMatch_reg_next(145);
        delayMatch_reg(146) <= delayMatch_reg_next(146);
        delayMatch_reg(147) <= delayMatch_reg_next(147);
      END IF;
    END IF;
  END PROCESS delayMatch_process;

  Bit_Slice_out1_1 <= delayMatch_reg(147);
  delayMatch_reg_next(0) <= Bit_Slice_out1;
  delayMatch_reg_next(1) <= delayMatch_reg(0);
  delayMatch_reg_next(2) <= delayMatch_reg(1);
  delayMatch_reg_next(3) <= delayMatch_reg(2);
  delayMatch_reg_next(4) <= delayMatch_reg(3);
  delayMatch_reg_next(5) <= delayMatch_reg(4);
  delayMatch_reg_next(6) <= delayMatch_reg(5);
  delayMatch_reg_next(7) <= delayMatch_reg(6);
  delayMatch_reg_next(8) <= delayMatch_reg(7);
  delayMatch_reg_next(9) <= delayMatch_reg(8);
  delayMatch_reg_next(10) <= delayMatch_reg(9);
  delayMatch_reg_next(11) <= delayMatch_reg(10);
  delayMatch_reg_next(12) <= delayMatch_reg(11);
  delayMatch_reg_next(13) <= delayMatch_reg(12);
  delayMatch_reg_next(14) <= delayMatch_reg(13);
  delayMatch_reg_next(15) <= delayMatch_reg(14);
  delayMatch_reg_next(16) <= delayMatch_reg(15);
  delayMatch_reg_next(17) <= delayMatch_reg(16);
  delayMatch_reg_next(18) <= delayMatch_reg(17);
  delayMatch_reg_next(19) <= delayMatch_reg(18);
  delayMatch_reg_next(20) <= delayMatch_reg(19);
  delayMatch_reg_next(21) <= delayMatch_reg(20);
  delayMatch_reg_next(22) <= delayMatch_reg(21);
  delayMatch_reg_next(23) <= delayMatch_reg(22);
  delayMatch_reg_next(24) <= delayMatch_reg(23);
  delayMatch_reg_next(25) <= delayMatch_reg(24);
  delayMatch_reg_next(26) <= delayMatch_reg(25);
  delayMatch_reg_next(27) <= delayMatch_reg(26);
  delayMatch_reg_next(28) <= delayMatch_reg(27);
  delayMatch_reg_next(29) <= delayMatch_reg(28);
  delayMatch_reg_next(30) <= delayMatch_reg(29);
  delayMatch_reg_next(31) <= delayMatch_reg(30);
  delayMatch_reg_next(32) <= delayMatch_reg(31);
  delayMatch_reg_next(33) <= delayMatch_reg(32);
  delayMatch_reg_next(34) <= delayMatch_reg(33);
  delayMatch_reg_next(35) <= delayMatch_reg(34);
  delayMatch_reg_next(36) <= delayMatch_reg(35);
  delayMatch_reg_next(37) <= delayMatch_reg(36);
  delayMatch_reg_next(38) <= delayMatch_reg(37);
  delayMatch_reg_next(39) <= delayMatch_reg(38);
  delayMatch_reg_next(40) <= delayMatch_reg(39);
  delayMatch_reg_next(41) <= delayMatch_reg(40);
  delayMatch_reg_next(42) <= delayMatch_reg(41);
  delayMatch_reg_next(43) <= delayMatch_reg(42);
  delayMatch_reg_next(44) <= delayMatch_reg(43);
  delayMatch_reg_next(45) <= delayMatch_reg(44);
  delayMatch_reg_next(46) <= delayMatch_reg(45);
  delayMatch_reg_next(47) <= delayMatch_reg(46);
  delayMatch_reg_next(48) <= delayMatch_reg(47);
  delayMatch_reg_next(49) <= delayMatch_reg(48);
  delayMatch_reg_next(50) <= delayMatch_reg(49);
  delayMatch_reg_next(51) <= delayMatch_reg(50);
  delayMatch_reg_next(52) <= delayMatch_reg(51);
  delayMatch_reg_next(53) <= delayMatch_reg(52);
  delayMatch_reg_next(54) <= delayMatch_reg(53);
  delayMatch_reg_next(55) <= delayMatch_reg(54);
  delayMatch_reg_next(56) <= delayMatch_reg(55);
  delayMatch_reg_next(57) <= delayMatch_reg(56);
  delayMatch_reg_next(58) <= delayMatch_reg(57);
  delayMatch_reg_next(59) <= delayMatch_reg(58);
  delayMatch_reg_next(60) <= delayMatch_reg(59);
  delayMatch_reg_next(61) <= delayMatch_reg(60);
  delayMatch_reg_next(62) <= delayMatch_reg(61);
  delayMatch_reg_next(63) <= delayMatch_reg(62);
  delayMatch_reg_next(64) <= delayMatch_reg(63);
  delayMatch_reg_next(65) <= delayMatch_reg(64);
  delayMatch_reg_next(66) <= delayMatch_reg(65);
  delayMatch_reg_next(67) <= delayMatch_reg(66);
  delayMatch_reg_next(68) <= delayMatch_reg(67);
  delayMatch_reg_next(69) <= delayMatch_reg(68);
  delayMatch_reg_next(70) <= delayMatch_reg(69);
  delayMatch_reg_next(71) <= delayMatch_reg(70);
  delayMatch_reg_next(72) <= delayMatch_reg(71);
  delayMatch_reg_next(73) <= delayMatch_reg(72);
  delayMatch_reg_next(74) <= delayMatch_reg(73);
  delayMatch_reg_next(75) <= delayMatch_reg(74);
  delayMatch_reg_next(76) <= delayMatch_reg(75);
  delayMatch_reg_next(77) <= delayMatch_reg(76);
  delayMatch_reg_next(78) <= delayMatch_reg(77);
  delayMatch_reg_next(79) <= delayMatch_reg(78);
  delayMatch_reg_next(80) <= delayMatch_reg(79);
  delayMatch_reg_next(81) <= delayMatch_reg(80);
  delayMatch_reg_next(82) <= delayMatch_reg(81);
  delayMatch_reg_next(83) <= delayMatch_reg(82);
  delayMatch_reg_next(84) <= delayMatch_reg(83);
  delayMatch_reg_next(85) <= delayMatch_reg(84);
  delayMatch_reg_next(86) <= delayMatch_reg(85);
  delayMatch_reg_next(87) <= delayMatch_reg(86);
  delayMatch_reg_next(88) <= delayMatch_reg(87);
  delayMatch_reg_next(89) <= delayMatch_reg(88);
  delayMatch_reg_next(90) <= delayMatch_reg(89);
  delayMatch_reg_next(91) <= delayMatch_reg(90);
  delayMatch_reg_next(92) <= delayMatch_reg(91);
  delayMatch_reg_next(93) <= delayMatch_reg(92);
  delayMatch_reg_next(94) <= delayMatch_reg(93);
  delayMatch_reg_next(95) <= delayMatch_reg(94);
  delayMatch_reg_next(96) <= delayMatch_reg(95);
  delayMatch_reg_next(97) <= delayMatch_reg(96);
  delayMatch_reg_next(98) <= delayMatch_reg(97);
  delayMatch_reg_next(99) <= delayMatch_reg(98);
  delayMatch_reg_next(100) <= delayMatch_reg(99);
  delayMatch_reg_next(101) <= delayMatch_reg(100);
  delayMatch_reg_next(102) <= delayMatch_reg(101);
  delayMatch_reg_next(103) <= delayMatch_reg(102);
  delayMatch_reg_next(104) <= delayMatch_reg(103);
  delayMatch_reg_next(105) <= delayMatch_reg(104);
  delayMatch_reg_next(106) <= delayMatch_reg(105);
  delayMatch_reg_next(107) <= delayMatch_reg(106);
  delayMatch_reg_next(108) <= delayMatch_reg(107);
  delayMatch_reg_next(109) <= delayMatch_reg(108);
  delayMatch_reg_next(110) <= delayMatch_reg(109);
  delayMatch_reg_next(111) <= delayMatch_reg(110);
  delayMatch_reg_next(112) <= delayMatch_reg(111);
  delayMatch_reg_next(113) <= delayMatch_reg(112);
  delayMatch_reg_next(114) <= delayMatch_reg(113);
  delayMatch_reg_next(115) <= delayMatch_reg(114);
  delayMatch_reg_next(116) <= delayMatch_reg(115);
  delayMatch_reg_next(117) <= delayMatch_reg(116);
  delayMatch_reg_next(118) <= delayMatch_reg(117);
  delayMatch_reg_next(119) <= delayMatch_reg(118);
  delayMatch_reg_next(120) <= delayMatch_reg(119);
  delayMatch_reg_next(121) <= delayMatch_reg(120);
  delayMatch_reg_next(122) <= delayMatch_reg(121);
  delayMatch_reg_next(123) <= delayMatch_reg(122);
  delayMatch_reg_next(124) <= delayMatch_reg(123);
  delayMatch_reg_next(125) <= delayMatch_reg(124);
  delayMatch_reg_next(126) <= delayMatch_reg(125);
  delayMatch_reg_next(127) <= delayMatch_reg(126);
  delayMatch_reg_next(128) <= delayMatch_reg(127);
  delayMatch_reg_next(129) <= delayMatch_reg(128);
  delayMatch_reg_next(130) <= delayMatch_reg(129);
  delayMatch_reg_next(131) <= delayMatch_reg(130);
  delayMatch_reg_next(132) <= delayMatch_reg(131);
  delayMatch_reg_next(133) <= delayMatch_reg(132);
  delayMatch_reg_next(134) <= delayMatch_reg(133);
  delayMatch_reg_next(135) <= delayMatch_reg(134);
  delayMatch_reg_next(136) <= delayMatch_reg(135);
  delayMatch_reg_next(137) <= delayMatch_reg(136);
  delayMatch_reg_next(138) <= delayMatch_reg(137);
  delayMatch_reg_next(139) <= delayMatch_reg(138);
  delayMatch_reg_next(140) <= delayMatch_reg(139);
  delayMatch_reg_next(141) <= delayMatch_reg(140);
  delayMatch_reg_next(142) <= delayMatch_reg(141);
  delayMatch_reg_next(143) <= delayMatch_reg(142);
  delayMatch_reg_next(144) <= delayMatch_reg(143);
  delayMatch_reg_next(145) <= delayMatch_reg(144);
  delayMatch_reg_next(146) <= delayMatch_reg(145);
  delayMatch_reg_next(147) <= delayMatch_reg(146);

  Spectrum_Options_out1_unsigned <= unsigned(Spectrum_Options_out1);

  Data_Imag_unsigned <= unsigned(Data_Imag);

  Data_Real_unsigned <= unsigned(Data_Real);

  Bit_Concat_out1 <= Data_Imag_unsigned & Data_Real_unsigned;

  delayMatch1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delayMatch1_reg(0) <= to_unsigned(0, 32);
      delayMatch1_reg(1) <= to_unsigned(0, 32);
      delayMatch1_reg(2) <= to_unsigned(0, 32);
      delayMatch1_reg(3) <= to_unsigned(0, 32);
      delayMatch1_reg(4) <= to_unsigned(0, 32);
      delayMatch1_reg(5) <= to_unsigned(0, 32);
      delayMatch1_reg(6) <= to_unsigned(0, 32);
      delayMatch1_reg(7) <= to_unsigned(0, 32);
      delayMatch1_reg(8) <= to_unsigned(0, 32);
      delayMatch1_reg(9) <= to_unsigned(0, 32);
      delayMatch1_reg(10) <= to_unsigned(0, 32);
      delayMatch1_reg(11) <= to_unsigned(0, 32);
      delayMatch1_reg(12) <= to_unsigned(0, 32);
      delayMatch1_reg(13) <= to_unsigned(0, 32);
      delayMatch1_reg(14) <= to_unsigned(0, 32);
      delayMatch1_reg(15) <= to_unsigned(0, 32);
      delayMatch1_reg(16) <= to_unsigned(0, 32);
      delayMatch1_reg(17) <= to_unsigned(0, 32);
      delayMatch1_reg(18) <= to_unsigned(0, 32);
      delayMatch1_reg(19) <= to_unsigned(0, 32);
      delayMatch1_reg(20) <= to_unsigned(0, 32);
      delayMatch1_reg(21) <= to_unsigned(0, 32);
      delayMatch1_reg(22) <= to_unsigned(0, 32);
      delayMatch1_reg(23) <= to_unsigned(0, 32);
      delayMatch1_reg(24) <= to_unsigned(0, 32);
      delayMatch1_reg(25) <= to_unsigned(0, 32);
      delayMatch1_reg(26) <= to_unsigned(0, 32);
      delayMatch1_reg(27) <= to_unsigned(0, 32);
      delayMatch1_reg(28) <= to_unsigned(0, 32);
      delayMatch1_reg(29) <= to_unsigned(0, 32);
      delayMatch1_reg(30) <= to_unsigned(0, 32);
      delayMatch1_reg(31) <= to_unsigned(0, 32);
      delayMatch1_reg(32) <= to_unsigned(0, 32);
      delayMatch1_reg(33) <= to_unsigned(0, 32);
      delayMatch1_reg(34) <= to_unsigned(0, 32);
      delayMatch1_reg(35) <= to_unsigned(0, 32);
      delayMatch1_reg(36) <= to_unsigned(0, 32);
      delayMatch1_reg(37) <= to_unsigned(0, 32);
      delayMatch1_reg(38) <= to_unsigned(0, 32);
      delayMatch1_reg(39) <= to_unsigned(0, 32);
      delayMatch1_reg(40) <= to_unsigned(0, 32);
      delayMatch1_reg(41) <= to_unsigned(0, 32);
      delayMatch1_reg(42) <= to_unsigned(0, 32);
      delayMatch1_reg(43) <= to_unsigned(0, 32);
      delayMatch1_reg(44) <= to_unsigned(0, 32);
      delayMatch1_reg(45) <= to_unsigned(0, 32);
      delayMatch1_reg(46) <= to_unsigned(0, 32);
      delayMatch1_reg(47) <= to_unsigned(0, 32);
      delayMatch1_reg(48) <= to_unsigned(0, 32);
      delayMatch1_reg(49) <= to_unsigned(0, 32);
      delayMatch1_reg(50) <= to_unsigned(0, 32);
      delayMatch1_reg(51) <= to_unsigned(0, 32);
      delayMatch1_reg(52) <= to_unsigned(0, 32);
      delayMatch1_reg(53) <= to_unsigned(0, 32);
      delayMatch1_reg(54) <= to_unsigned(0, 32);
      delayMatch1_reg(55) <= to_unsigned(0, 32);
      delayMatch1_reg(56) <= to_unsigned(0, 32);
      delayMatch1_reg(57) <= to_unsigned(0, 32);
      delayMatch1_reg(58) <= to_unsigned(0, 32);
      delayMatch1_reg(59) <= to_unsigned(0, 32);
      delayMatch1_reg(60) <= to_unsigned(0, 32);
      delayMatch1_reg(61) <= to_unsigned(0, 32);
      delayMatch1_reg(62) <= to_unsigned(0, 32);
      delayMatch1_reg(63) <= to_unsigned(0, 32);
      delayMatch1_reg(64) <= to_unsigned(0, 32);
      delayMatch1_reg(65) <= to_unsigned(0, 32);
      delayMatch1_reg(66) <= to_unsigned(0, 32);
      delayMatch1_reg(67) <= to_unsigned(0, 32);
      delayMatch1_reg(68) <= to_unsigned(0, 32);
      delayMatch1_reg(69) <= to_unsigned(0, 32);
      delayMatch1_reg(70) <= to_unsigned(0, 32);
      delayMatch1_reg(71) <= to_unsigned(0, 32);
      delayMatch1_reg(72) <= to_unsigned(0, 32);
      delayMatch1_reg(73) <= to_unsigned(0, 32);
      delayMatch1_reg(74) <= to_unsigned(0, 32);
      delayMatch1_reg(75) <= to_unsigned(0, 32);
      delayMatch1_reg(76) <= to_unsigned(0, 32);
      delayMatch1_reg(77) <= to_unsigned(0, 32);
      delayMatch1_reg(78) <= to_unsigned(0, 32);
      delayMatch1_reg(79) <= to_unsigned(0, 32);
      delayMatch1_reg(80) <= to_unsigned(0, 32);
      delayMatch1_reg(81) <= to_unsigned(0, 32);
      delayMatch1_reg(82) <= to_unsigned(0, 32);
      delayMatch1_reg(83) <= to_unsigned(0, 32);
      delayMatch1_reg(84) <= to_unsigned(0, 32);
      delayMatch1_reg(85) <= to_unsigned(0, 32);
      delayMatch1_reg(86) <= to_unsigned(0, 32);
      delayMatch1_reg(87) <= to_unsigned(0, 32);
      delayMatch1_reg(88) <= to_unsigned(0, 32);
      delayMatch1_reg(89) <= to_unsigned(0, 32);
      delayMatch1_reg(90) <= to_unsigned(0, 32);
      delayMatch1_reg(91) <= to_unsigned(0, 32);
      delayMatch1_reg(92) <= to_unsigned(0, 32);
      delayMatch1_reg(93) <= to_unsigned(0, 32);
      delayMatch1_reg(94) <= to_unsigned(0, 32);
      delayMatch1_reg(95) <= to_unsigned(0, 32);
      delayMatch1_reg(96) <= to_unsigned(0, 32);
      delayMatch1_reg(97) <= to_unsigned(0, 32);
      delayMatch1_reg(98) <= to_unsigned(0, 32);
      delayMatch1_reg(99) <= to_unsigned(0, 32);
      delayMatch1_reg(100) <= to_unsigned(0, 32);
      delayMatch1_reg(101) <= to_unsigned(0, 32);
      delayMatch1_reg(102) <= to_unsigned(0, 32);
      delayMatch1_reg(103) <= to_unsigned(0, 32);
      delayMatch1_reg(104) <= to_unsigned(0, 32);
      delayMatch1_reg(105) <= to_unsigned(0, 32);
      delayMatch1_reg(106) <= to_unsigned(0, 32);
      delayMatch1_reg(107) <= to_unsigned(0, 32);
      delayMatch1_reg(108) <= to_unsigned(0, 32);
      delayMatch1_reg(109) <= to_unsigned(0, 32);
      delayMatch1_reg(110) <= to_unsigned(0, 32);
      delayMatch1_reg(111) <= to_unsigned(0, 32);
      delayMatch1_reg(112) <= to_unsigned(0, 32);
      delayMatch1_reg(113) <= to_unsigned(0, 32);
      delayMatch1_reg(114) <= to_unsigned(0, 32);
      delayMatch1_reg(115) <= to_unsigned(0, 32);
      delayMatch1_reg(116) <= to_unsigned(0, 32);
      delayMatch1_reg(117) <= to_unsigned(0, 32);
      delayMatch1_reg(118) <= to_unsigned(0, 32);
      delayMatch1_reg(119) <= to_unsigned(0, 32);
      delayMatch1_reg(120) <= to_unsigned(0, 32);
      delayMatch1_reg(121) <= to_unsigned(0, 32);
      delayMatch1_reg(122) <= to_unsigned(0, 32);
      delayMatch1_reg(123) <= to_unsigned(0, 32);
      delayMatch1_reg(124) <= to_unsigned(0, 32);
      delayMatch1_reg(125) <= to_unsigned(0, 32);
      delayMatch1_reg(126) <= to_unsigned(0, 32);
      delayMatch1_reg(127) <= to_unsigned(0, 32);
      delayMatch1_reg(128) <= to_unsigned(0, 32);
      delayMatch1_reg(129) <= to_unsigned(0, 32);
      delayMatch1_reg(130) <= to_unsigned(0, 32);
      delayMatch1_reg(131) <= to_unsigned(0, 32);
      delayMatch1_reg(132) <= to_unsigned(0, 32);
      delayMatch1_reg(133) <= to_unsigned(0, 32);
      delayMatch1_reg(134) <= to_unsigned(0, 32);
      delayMatch1_reg(135) <= to_unsigned(0, 32);
      delayMatch1_reg(136) <= to_unsigned(0, 32);
      delayMatch1_reg(137) <= to_unsigned(0, 32);
      delayMatch1_reg(138) <= to_unsigned(0, 32);
      delayMatch1_reg(139) <= to_unsigned(0, 32);
      delayMatch1_reg(140) <= to_unsigned(0, 32);
      delayMatch1_reg(141) <= to_unsigned(0, 32);
      delayMatch1_reg(142) <= to_unsigned(0, 32);
      delayMatch1_reg(143) <= to_unsigned(0, 32);
      delayMatch1_reg(144) <= to_unsigned(0, 32);
      delayMatch1_reg(145) <= to_unsigned(0, 32);
      delayMatch1_reg(146) <= to_unsigned(0, 32);
      delayMatch1_reg(147) <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        delayMatch1_reg(0) <= delayMatch1_reg_next(0);
        delayMatch1_reg(1) <= delayMatch1_reg_next(1);
        delayMatch1_reg(2) <= delayMatch1_reg_next(2);
        delayMatch1_reg(3) <= delayMatch1_reg_next(3);
        delayMatch1_reg(4) <= delayMatch1_reg_next(4);
        delayMatch1_reg(5) <= delayMatch1_reg_next(5);
        delayMatch1_reg(6) <= delayMatch1_reg_next(6);
        delayMatch1_reg(7) <= delayMatch1_reg_next(7);
        delayMatch1_reg(8) <= delayMatch1_reg_next(8);
        delayMatch1_reg(9) <= delayMatch1_reg_next(9);
        delayMatch1_reg(10) <= delayMatch1_reg_next(10);
        delayMatch1_reg(11) <= delayMatch1_reg_next(11);
        delayMatch1_reg(12) <= delayMatch1_reg_next(12);
        delayMatch1_reg(13) <= delayMatch1_reg_next(13);
        delayMatch1_reg(14) <= delayMatch1_reg_next(14);
        delayMatch1_reg(15) <= delayMatch1_reg_next(15);
        delayMatch1_reg(16) <= delayMatch1_reg_next(16);
        delayMatch1_reg(17) <= delayMatch1_reg_next(17);
        delayMatch1_reg(18) <= delayMatch1_reg_next(18);
        delayMatch1_reg(19) <= delayMatch1_reg_next(19);
        delayMatch1_reg(20) <= delayMatch1_reg_next(20);
        delayMatch1_reg(21) <= delayMatch1_reg_next(21);
        delayMatch1_reg(22) <= delayMatch1_reg_next(22);
        delayMatch1_reg(23) <= delayMatch1_reg_next(23);
        delayMatch1_reg(24) <= delayMatch1_reg_next(24);
        delayMatch1_reg(25) <= delayMatch1_reg_next(25);
        delayMatch1_reg(26) <= delayMatch1_reg_next(26);
        delayMatch1_reg(27) <= delayMatch1_reg_next(27);
        delayMatch1_reg(28) <= delayMatch1_reg_next(28);
        delayMatch1_reg(29) <= delayMatch1_reg_next(29);
        delayMatch1_reg(30) <= delayMatch1_reg_next(30);
        delayMatch1_reg(31) <= delayMatch1_reg_next(31);
        delayMatch1_reg(32) <= delayMatch1_reg_next(32);
        delayMatch1_reg(33) <= delayMatch1_reg_next(33);
        delayMatch1_reg(34) <= delayMatch1_reg_next(34);
        delayMatch1_reg(35) <= delayMatch1_reg_next(35);
        delayMatch1_reg(36) <= delayMatch1_reg_next(36);
        delayMatch1_reg(37) <= delayMatch1_reg_next(37);
        delayMatch1_reg(38) <= delayMatch1_reg_next(38);
        delayMatch1_reg(39) <= delayMatch1_reg_next(39);
        delayMatch1_reg(40) <= delayMatch1_reg_next(40);
        delayMatch1_reg(41) <= delayMatch1_reg_next(41);
        delayMatch1_reg(42) <= delayMatch1_reg_next(42);
        delayMatch1_reg(43) <= delayMatch1_reg_next(43);
        delayMatch1_reg(44) <= delayMatch1_reg_next(44);
        delayMatch1_reg(45) <= delayMatch1_reg_next(45);
        delayMatch1_reg(46) <= delayMatch1_reg_next(46);
        delayMatch1_reg(47) <= delayMatch1_reg_next(47);
        delayMatch1_reg(48) <= delayMatch1_reg_next(48);
        delayMatch1_reg(49) <= delayMatch1_reg_next(49);
        delayMatch1_reg(50) <= delayMatch1_reg_next(50);
        delayMatch1_reg(51) <= delayMatch1_reg_next(51);
        delayMatch1_reg(52) <= delayMatch1_reg_next(52);
        delayMatch1_reg(53) <= delayMatch1_reg_next(53);
        delayMatch1_reg(54) <= delayMatch1_reg_next(54);
        delayMatch1_reg(55) <= delayMatch1_reg_next(55);
        delayMatch1_reg(56) <= delayMatch1_reg_next(56);
        delayMatch1_reg(57) <= delayMatch1_reg_next(57);
        delayMatch1_reg(58) <= delayMatch1_reg_next(58);
        delayMatch1_reg(59) <= delayMatch1_reg_next(59);
        delayMatch1_reg(60) <= delayMatch1_reg_next(60);
        delayMatch1_reg(61) <= delayMatch1_reg_next(61);
        delayMatch1_reg(62) <= delayMatch1_reg_next(62);
        delayMatch1_reg(63) <= delayMatch1_reg_next(63);
        delayMatch1_reg(64) <= delayMatch1_reg_next(64);
        delayMatch1_reg(65) <= delayMatch1_reg_next(65);
        delayMatch1_reg(66) <= delayMatch1_reg_next(66);
        delayMatch1_reg(67) <= delayMatch1_reg_next(67);
        delayMatch1_reg(68) <= delayMatch1_reg_next(68);
        delayMatch1_reg(69) <= delayMatch1_reg_next(69);
        delayMatch1_reg(70) <= delayMatch1_reg_next(70);
        delayMatch1_reg(71) <= delayMatch1_reg_next(71);
        delayMatch1_reg(72) <= delayMatch1_reg_next(72);
        delayMatch1_reg(73) <= delayMatch1_reg_next(73);
        delayMatch1_reg(74) <= delayMatch1_reg_next(74);
        delayMatch1_reg(75) <= delayMatch1_reg_next(75);
        delayMatch1_reg(76) <= delayMatch1_reg_next(76);
        delayMatch1_reg(77) <= delayMatch1_reg_next(77);
        delayMatch1_reg(78) <= delayMatch1_reg_next(78);
        delayMatch1_reg(79) <= delayMatch1_reg_next(79);
        delayMatch1_reg(80) <= delayMatch1_reg_next(80);
        delayMatch1_reg(81) <= delayMatch1_reg_next(81);
        delayMatch1_reg(82) <= delayMatch1_reg_next(82);
        delayMatch1_reg(83) <= delayMatch1_reg_next(83);
        delayMatch1_reg(84) <= delayMatch1_reg_next(84);
        delayMatch1_reg(85) <= delayMatch1_reg_next(85);
        delayMatch1_reg(86) <= delayMatch1_reg_next(86);
        delayMatch1_reg(87) <= delayMatch1_reg_next(87);
        delayMatch1_reg(88) <= delayMatch1_reg_next(88);
        delayMatch1_reg(89) <= delayMatch1_reg_next(89);
        delayMatch1_reg(90) <= delayMatch1_reg_next(90);
        delayMatch1_reg(91) <= delayMatch1_reg_next(91);
        delayMatch1_reg(92) <= delayMatch1_reg_next(92);
        delayMatch1_reg(93) <= delayMatch1_reg_next(93);
        delayMatch1_reg(94) <= delayMatch1_reg_next(94);
        delayMatch1_reg(95) <= delayMatch1_reg_next(95);
        delayMatch1_reg(96) <= delayMatch1_reg_next(96);
        delayMatch1_reg(97) <= delayMatch1_reg_next(97);
        delayMatch1_reg(98) <= delayMatch1_reg_next(98);
        delayMatch1_reg(99) <= delayMatch1_reg_next(99);
        delayMatch1_reg(100) <= delayMatch1_reg_next(100);
        delayMatch1_reg(101) <= delayMatch1_reg_next(101);
        delayMatch1_reg(102) <= delayMatch1_reg_next(102);
        delayMatch1_reg(103) <= delayMatch1_reg_next(103);
        delayMatch1_reg(104) <= delayMatch1_reg_next(104);
        delayMatch1_reg(105) <= delayMatch1_reg_next(105);
        delayMatch1_reg(106) <= delayMatch1_reg_next(106);
        delayMatch1_reg(107) <= delayMatch1_reg_next(107);
        delayMatch1_reg(108) <= delayMatch1_reg_next(108);
        delayMatch1_reg(109) <= delayMatch1_reg_next(109);
        delayMatch1_reg(110) <= delayMatch1_reg_next(110);
        delayMatch1_reg(111) <= delayMatch1_reg_next(111);
        delayMatch1_reg(112) <= delayMatch1_reg_next(112);
        delayMatch1_reg(113) <= delayMatch1_reg_next(113);
        delayMatch1_reg(114) <= delayMatch1_reg_next(114);
        delayMatch1_reg(115) <= delayMatch1_reg_next(115);
        delayMatch1_reg(116) <= delayMatch1_reg_next(116);
        delayMatch1_reg(117) <= delayMatch1_reg_next(117);
        delayMatch1_reg(118) <= delayMatch1_reg_next(118);
        delayMatch1_reg(119) <= delayMatch1_reg_next(119);
        delayMatch1_reg(120) <= delayMatch1_reg_next(120);
        delayMatch1_reg(121) <= delayMatch1_reg_next(121);
        delayMatch1_reg(122) <= delayMatch1_reg_next(122);
        delayMatch1_reg(123) <= delayMatch1_reg_next(123);
        delayMatch1_reg(124) <= delayMatch1_reg_next(124);
        delayMatch1_reg(125) <= delayMatch1_reg_next(125);
        delayMatch1_reg(126) <= delayMatch1_reg_next(126);
        delayMatch1_reg(127) <= delayMatch1_reg_next(127);
        delayMatch1_reg(128) <= delayMatch1_reg_next(128);
        delayMatch1_reg(129) <= delayMatch1_reg_next(129);
        delayMatch1_reg(130) <= delayMatch1_reg_next(130);
        delayMatch1_reg(131) <= delayMatch1_reg_next(131);
        delayMatch1_reg(132) <= delayMatch1_reg_next(132);
        delayMatch1_reg(133) <= delayMatch1_reg_next(133);
        delayMatch1_reg(134) <= delayMatch1_reg_next(134);
        delayMatch1_reg(135) <= delayMatch1_reg_next(135);
        delayMatch1_reg(136) <= delayMatch1_reg_next(136);
        delayMatch1_reg(137) <= delayMatch1_reg_next(137);
        delayMatch1_reg(138) <= delayMatch1_reg_next(138);
        delayMatch1_reg(139) <= delayMatch1_reg_next(139);
        delayMatch1_reg(140) <= delayMatch1_reg_next(140);
        delayMatch1_reg(141) <= delayMatch1_reg_next(141);
        delayMatch1_reg(142) <= delayMatch1_reg_next(142);
        delayMatch1_reg(143) <= delayMatch1_reg_next(143);
        delayMatch1_reg(144) <= delayMatch1_reg_next(144);
        delayMatch1_reg(145) <= delayMatch1_reg_next(145);
        delayMatch1_reg(146) <= delayMatch1_reg_next(146);
        delayMatch1_reg(147) <= delayMatch1_reg_next(147);
      END IF;
    END IF;
  END PROCESS delayMatch1_process;

  Bit_Concat_out1_1 <= delayMatch1_reg(147);
  delayMatch1_reg_next(0) <= Bit_Concat_out1;
  delayMatch1_reg_next(1) <= delayMatch1_reg(0);
  delayMatch1_reg_next(2) <= delayMatch1_reg(1);
  delayMatch1_reg_next(3) <= delayMatch1_reg(2);
  delayMatch1_reg_next(4) <= delayMatch1_reg(3);
  delayMatch1_reg_next(5) <= delayMatch1_reg(4);
  delayMatch1_reg_next(6) <= delayMatch1_reg(5);
  delayMatch1_reg_next(7) <= delayMatch1_reg(6);
  delayMatch1_reg_next(8) <= delayMatch1_reg(7);
  delayMatch1_reg_next(9) <= delayMatch1_reg(8);
  delayMatch1_reg_next(10) <= delayMatch1_reg(9);
  delayMatch1_reg_next(11) <= delayMatch1_reg(10);
  delayMatch1_reg_next(12) <= delayMatch1_reg(11);
  delayMatch1_reg_next(13) <= delayMatch1_reg(12);
  delayMatch1_reg_next(14) <= delayMatch1_reg(13);
  delayMatch1_reg_next(15) <= delayMatch1_reg(14);
  delayMatch1_reg_next(16) <= delayMatch1_reg(15);
  delayMatch1_reg_next(17) <= delayMatch1_reg(16);
  delayMatch1_reg_next(18) <= delayMatch1_reg(17);
  delayMatch1_reg_next(19) <= delayMatch1_reg(18);
  delayMatch1_reg_next(20) <= delayMatch1_reg(19);
  delayMatch1_reg_next(21) <= delayMatch1_reg(20);
  delayMatch1_reg_next(22) <= delayMatch1_reg(21);
  delayMatch1_reg_next(23) <= delayMatch1_reg(22);
  delayMatch1_reg_next(24) <= delayMatch1_reg(23);
  delayMatch1_reg_next(25) <= delayMatch1_reg(24);
  delayMatch1_reg_next(26) <= delayMatch1_reg(25);
  delayMatch1_reg_next(27) <= delayMatch1_reg(26);
  delayMatch1_reg_next(28) <= delayMatch1_reg(27);
  delayMatch1_reg_next(29) <= delayMatch1_reg(28);
  delayMatch1_reg_next(30) <= delayMatch1_reg(29);
  delayMatch1_reg_next(31) <= delayMatch1_reg(30);
  delayMatch1_reg_next(32) <= delayMatch1_reg(31);
  delayMatch1_reg_next(33) <= delayMatch1_reg(32);
  delayMatch1_reg_next(34) <= delayMatch1_reg(33);
  delayMatch1_reg_next(35) <= delayMatch1_reg(34);
  delayMatch1_reg_next(36) <= delayMatch1_reg(35);
  delayMatch1_reg_next(37) <= delayMatch1_reg(36);
  delayMatch1_reg_next(38) <= delayMatch1_reg(37);
  delayMatch1_reg_next(39) <= delayMatch1_reg(38);
  delayMatch1_reg_next(40) <= delayMatch1_reg(39);
  delayMatch1_reg_next(41) <= delayMatch1_reg(40);
  delayMatch1_reg_next(42) <= delayMatch1_reg(41);
  delayMatch1_reg_next(43) <= delayMatch1_reg(42);
  delayMatch1_reg_next(44) <= delayMatch1_reg(43);
  delayMatch1_reg_next(45) <= delayMatch1_reg(44);
  delayMatch1_reg_next(46) <= delayMatch1_reg(45);
  delayMatch1_reg_next(47) <= delayMatch1_reg(46);
  delayMatch1_reg_next(48) <= delayMatch1_reg(47);
  delayMatch1_reg_next(49) <= delayMatch1_reg(48);
  delayMatch1_reg_next(50) <= delayMatch1_reg(49);
  delayMatch1_reg_next(51) <= delayMatch1_reg(50);
  delayMatch1_reg_next(52) <= delayMatch1_reg(51);
  delayMatch1_reg_next(53) <= delayMatch1_reg(52);
  delayMatch1_reg_next(54) <= delayMatch1_reg(53);
  delayMatch1_reg_next(55) <= delayMatch1_reg(54);
  delayMatch1_reg_next(56) <= delayMatch1_reg(55);
  delayMatch1_reg_next(57) <= delayMatch1_reg(56);
  delayMatch1_reg_next(58) <= delayMatch1_reg(57);
  delayMatch1_reg_next(59) <= delayMatch1_reg(58);
  delayMatch1_reg_next(60) <= delayMatch1_reg(59);
  delayMatch1_reg_next(61) <= delayMatch1_reg(60);
  delayMatch1_reg_next(62) <= delayMatch1_reg(61);
  delayMatch1_reg_next(63) <= delayMatch1_reg(62);
  delayMatch1_reg_next(64) <= delayMatch1_reg(63);
  delayMatch1_reg_next(65) <= delayMatch1_reg(64);
  delayMatch1_reg_next(66) <= delayMatch1_reg(65);
  delayMatch1_reg_next(67) <= delayMatch1_reg(66);
  delayMatch1_reg_next(68) <= delayMatch1_reg(67);
  delayMatch1_reg_next(69) <= delayMatch1_reg(68);
  delayMatch1_reg_next(70) <= delayMatch1_reg(69);
  delayMatch1_reg_next(71) <= delayMatch1_reg(70);
  delayMatch1_reg_next(72) <= delayMatch1_reg(71);
  delayMatch1_reg_next(73) <= delayMatch1_reg(72);
  delayMatch1_reg_next(74) <= delayMatch1_reg(73);
  delayMatch1_reg_next(75) <= delayMatch1_reg(74);
  delayMatch1_reg_next(76) <= delayMatch1_reg(75);
  delayMatch1_reg_next(77) <= delayMatch1_reg(76);
  delayMatch1_reg_next(78) <= delayMatch1_reg(77);
  delayMatch1_reg_next(79) <= delayMatch1_reg(78);
  delayMatch1_reg_next(80) <= delayMatch1_reg(79);
  delayMatch1_reg_next(81) <= delayMatch1_reg(80);
  delayMatch1_reg_next(82) <= delayMatch1_reg(81);
  delayMatch1_reg_next(83) <= delayMatch1_reg(82);
  delayMatch1_reg_next(84) <= delayMatch1_reg(83);
  delayMatch1_reg_next(85) <= delayMatch1_reg(84);
  delayMatch1_reg_next(86) <= delayMatch1_reg(85);
  delayMatch1_reg_next(87) <= delayMatch1_reg(86);
  delayMatch1_reg_next(88) <= delayMatch1_reg(87);
  delayMatch1_reg_next(89) <= delayMatch1_reg(88);
  delayMatch1_reg_next(90) <= delayMatch1_reg(89);
  delayMatch1_reg_next(91) <= delayMatch1_reg(90);
  delayMatch1_reg_next(92) <= delayMatch1_reg(91);
  delayMatch1_reg_next(93) <= delayMatch1_reg(92);
  delayMatch1_reg_next(94) <= delayMatch1_reg(93);
  delayMatch1_reg_next(95) <= delayMatch1_reg(94);
  delayMatch1_reg_next(96) <= delayMatch1_reg(95);
  delayMatch1_reg_next(97) <= delayMatch1_reg(96);
  delayMatch1_reg_next(98) <= delayMatch1_reg(97);
  delayMatch1_reg_next(99) <= delayMatch1_reg(98);
  delayMatch1_reg_next(100) <= delayMatch1_reg(99);
  delayMatch1_reg_next(101) <= delayMatch1_reg(100);
  delayMatch1_reg_next(102) <= delayMatch1_reg(101);
  delayMatch1_reg_next(103) <= delayMatch1_reg(102);
  delayMatch1_reg_next(104) <= delayMatch1_reg(103);
  delayMatch1_reg_next(105) <= delayMatch1_reg(104);
  delayMatch1_reg_next(106) <= delayMatch1_reg(105);
  delayMatch1_reg_next(107) <= delayMatch1_reg(106);
  delayMatch1_reg_next(108) <= delayMatch1_reg(107);
  delayMatch1_reg_next(109) <= delayMatch1_reg(108);
  delayMatch1_reg_next(110) <= delayMatch1_reg(109);
  delayMatch1_reg_next(111) <= delayMatch1_reg(110);
  delayMatch1_reg_next(112) <= delayMatch1_reg(111);
  delayMatch1_reg_next(113) <= delayMatch1_reg(112);
  delayMatch1_reg_next(114) <= delayMatch1_reg(113);
  delayMatch1_reg_next(115) <= delayMatch1_reg(114);
  delayMatch1_reg_next(116) <= delayMatch1_reg(115);
  delayMatch1_reg_next(117) <= delayMatch1_reg(116);
  delayMatch1_reg_next(118) <= delayMatch1_reg(117);
  delayMatch1_reg_next(119) <= delayMatch1_reg(118);
  delayMatch1_reg_next(120) <= delayMatch1_reg(119);
  delayMatch1_reg_next(121) <= delayMatch1_reg(120);
  delayMatch1_reg_next(122) <= delayMatch1_reg(121);
  delayMatch1_reg_next(123) <= delayMatch1_reg(122);
  delayMatch1_reg_next(124) <= delayMatch1_reg(123);
  delayMatch1_reg_next(125) <= delayMatch1_reg(124);
  delayMatch1_reg_next(126) <= delayMatch1_reg(125);
  delayMatch1_reg_next(127) <= delayMatch1_reg(126);
  delayMatch1_reg_next(128) <= delayMatch1_reg(127);
  delayMatch1_reg_next(129) <= delayMatch1_reg(128);
  delayMatch1_reg_next(130) <= delayMatch1_reg(129);
  delayMatch1_reg_next(131) <= delayMatch1_reg(130);
  delayMatch1_reg_next(132) <= delayMatch1_reg(131);
  delayMatch1_reg_next(133) <= delayMatch1_reg(132);
  delayMatch1_reg_next(134) <= delayMatch1_reg(133);
  delayMatch1_reg_next(135) <= delayMatch1_reg(134);
  delayMatch1_reg_next(136) <= delayMatch1_reg(135);
  delayMatch1_reg_next(137) <= delayMatch1_reg(136);
  delayMatch1_reg_next(138) <= delayMatch1_reg(137);
  delayMatch1_reg_next(139) <= delayMatch1_reg(138);
  delayMatch1_reg_next(140) <= delayMatch1_reg(139);
  delayMatch1_reg_next(141) <= delayMatch1_reg(140);
  delayMatch1_reg_next(142) <= delayMatch1_reg(141);
  delayMatch1_reg_next(143) <= delayMatch1_reg(142);
  delayMatch1_reg_next(144) <= delayMatch1_reg(143);
  delayMatch1_reg_next(145) <= delayMatch1_reg(144);
  delayMatch1_reg_next(146) <= delayMatch1_reg(145);
  delayMatch1_reg_next(147) <= delayMatch1_reg(146);

  
  Multiport_Switch_out1 <= Spectrum_Options_out1_unsigned WHEN Bit_Slice_out1_1 = '0' ELSE
      Bit_Concat_out1_1;

  Data_Out <= std_logic_vector(Multiport_Switch_out1);

  AND_out1 <= Last_Real AND Last_Imag;

  
  Multiport_Switch2_out1 <= Spectrum_Options_out3 WHEN Bit_Slice_out1 = '0' ELSE
      AND_out1;

  End_Out <= Multiport_Switch2_out1;

  AND1_out1 <= User_Real AND User_Imag;

  
  Multiport_Switch1_out1 <= Spectrum_Options_out2 WHEN Bit_Slice_out1 = '0' ELSE
      AND1_out1;

  Start_Out <= Multiport_Switch1_out1;

END rtl;

