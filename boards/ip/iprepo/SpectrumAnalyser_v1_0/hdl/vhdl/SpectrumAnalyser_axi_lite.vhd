-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\spectrum_analyser\SpectrumAnalyser_axi_lite.vhd
-- Created: 2021-01-04 00:55:10
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: SpectrumAnalyser_axi_lite
-- Source Path: SpectrumAnalyser/SpectrumAnalyser_axi_lite
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY SpectrumAnalyser_axi_lite IS
  PORT( reset                             :   IN    std_logic;
        AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        read_ip_timestamp                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        read_WReady                       :   IN    std_logic;  -- ufix1
        read_Buffer_Pointer               :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        read_DMA_Status                   :   IN    std_logic_vector(5 DOWNTO 0);  -- ufix6
        in_burst_axi4_master_rd           :   IN    std_logic;  -- ufix1
        in_burst_axi4_master_wr           :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic;  -- ufix1
        write_axi_enable                  :   OUT   std_logic;  -- ufix1
        write_AXI4_Master_Rd_base_address :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_AXI4_Master_Wr_base_address :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Packet_Size                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_SSR_Mode                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Units                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Type                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Vrms                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Type_Scale                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Power_Scale                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Selector                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_WLength                     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_WAddress                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_WEnable                     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Length                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Buffer_Address_1            :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Buffer_Address_2            :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Buffer_Address_3            :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Enable                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Count                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        soft_reset_pending                :   OUT   std_logic;  -- ufix1
        reset_internal                    :   OUT   std_logic  -- ufix1
        );
END SpectrumAnalyser_axi_lite;


ARCHITECTURE rtl OF SpectrumAnalyser_axi_lite IS

  -- Component Declarations
  COMPONENT SpectrumAnalyser_addr_decoder
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          data_write                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          addr_sel                        :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
          wr_enb                          :   IN    std_logic;  -- ufix1
          rd_enb                          :   IN    std_logic;  -- ufix1
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          read_WReady                     :   IN    std_logic;  -- ufix1
          read_Buffer_Pointer             :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          read_DMA_Status                 :   IN    std_logic_vector(5 DOWNTO 0);  -- ufix6
          data_read                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          write_AXI4_Master_Rd_base_address :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_AXI4_Master_Wr_base_address :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Packet_Size               :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_SSR_Mode                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Units                     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Type                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Vrms                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Type_Scale                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Power_Scale               :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Selector                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_WLength                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_WAddress                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_WEnable                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Length                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Buffer_Address_1          :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Buffer_Address_2          :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Buffer_Address_3          :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Enable                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Count                     :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  COMPONENT SpectrumAnalyser_axi_lite_module
    PORT( clk                             :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          data_read                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          in_burst_axi4_master_rd         :   IN    std_logic;  -- ufix1
          in_burst_axi4_master_wr         :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          data_write                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          addr_sel                        :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
          wr_enb                          :   OUT   std_logic;  -- ufix1
          rd_enb                          :   OUT   std_logic;  -- ufix1
          reset_internal                  :   OUT   std_logic;  -- ufix1
          soft_reset_pending              :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : SpectrumAnalyser_addr_decoder
    USE ENTITY work.SpectrumAnalyser_addr_decoder(rtl);

  FOR ALL : SpectrumAnalyser_axi_lite_module
    USE ENTITY work.SpectrumAnalyser_axi_lite_module(rtl);

  -- Signals
  SIGNAL top_data_write                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL top_addr_sel                     : std_logic_vector(13 DOWNTO 0);  -- ufix14
  SIGNAL top_wr_enb                       : std_logic;  -- ufix1
  SIGNAL top_rd_enb                       : std_logic;  -- ufix1
  SIGNAL top_data_read                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_AXI4_Master_Rd_base_address_tmp : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_AXI4_Master_Wr_base_address_tmp : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Packet_Size_tmp            : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_SSR_Mode_tmp               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Units_tmp                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Type_tmp                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Vrms_tmp                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Type_Scale_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Power_Scale_tmp            : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Selector_tmp               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_WLength_tmp                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_WAddress_tmp               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_WEnable_tmp                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Length_tmp                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Buffer_Address_1_tmp       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Buffer_Address_2_tmp       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Buffer_Address_3_tmp       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Enable_tmp                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Count_tmp                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL top_reset_internal               : std_logic;  -- ufix1

BEGIN
  u_SpectrumAnalyser_addr_decoder_inst : SpectrumAnalyser_addr_decoder
    PORT MAP( clk => AXI4_Lite_ACLK,  -- ufix1
              reset => reset,
              data_write => top_data_write,  -- ufix32
              addr_sel => top_addr_sel,  -- ufix14
              wr_enb => top_wr_enb,  -- ufix1
              rd_enb => top_rd_enb,  -- ufix1
              read_ip_timestamp => read_ip_timestamp,  -- ufix32
              read_WReady => read_WReady,  -- ufix1
              read_Buffer_Pointer => read_Buffer_Pointer,  -- ufix2
              read_DMA_Status => read_DMA_Status,  -- ufix6
              data_read => top_data_read,  -- ufix32
              write_axi_enable => write_axi_enable,  -- ufix1
              write_AXI4_Master_Rd_base_address => write_AXI4_Master_Rd_base_address_tmp,  -- ufix32
              write_AXI4_Master_Wr_base_address => write_AXI4_Master_Wr_base_address_tmp,  -- ufix32
              write_Packet_Size => write_Packet_Size_tmp,  -- ufix32
              write_SSR_Mode => write_SSR_Mode_tmp,  -- ufix32
              write_Units => write_Units_tmp,  -- ufix32
              write_Type => write_Type_tmp,  -- ufix32
              write_Vrms => write_Vrms_tmp,  -- ufix32
              write_Type_Scale => write_Type_Scale_tmp,  -- ufix32
              write_Power_Scale => write_Power_Scale_tmp,  -- ufix32
              write_Selector => write_Selector_tmp,  -- ufix32
              write_WLength => write_WLength_tmp,  -- ufix32
              write_WAddress => write_WAddress_tmp,  -- ufix32
              write_WEnable => write_WEnable_tmp,  -- ufix32
              write_Length => write_Length_tmp,  -- ufix32
              write_Buffer_Address_1 => write_Buffer_Address_1_tmp,  -- ufix32
              write_Buffer_Address_2 => write_Buffer_Address_2_tmp,  -- ufix32
              write_Buffer_Address_3 => write_Buffer_Address_3_tmp,  -- ufix32
              write_Enable => write_Enable_tmp,  -- ufix32
              write_Count => write_Count_tmp  -- ufix32
              );

  u_SpectrumAnalyser_axi_lite_module_inst : SpectrumAnalyser_axi_lite_module
    PORT MAP( clk => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              data_read => top_data_read,  -- ufix32
              in_burst_axi4_master_rd => in_burst_axi4_master_rd,  -- ufix1
              in_burst_axi4_master_wr => in_burst_axi4_master_wr,  -- ufix1
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              data_write => top_data_write,  -- ufix32
              addr_sel => top_addr_sel,  -- ufix14
              wr_enb => top_wr_enb,  -- ufix1
              rd_enb => top_rd_enb,  -- ufix1
              reset_internal => top_reset_internal,  -- ufix1
              soft_reset_pending => soft_reset_pending  -- ufix1
              );

  reset_internal <= top_reset_internal;

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

  write_AXI4_Master_Rd_base_address <= write_AXI4_Master_Rd_base_address_tmp;

  write_AXI4_Master_Wr_base_address <= write_AXI4_Master_Wr_base_address_tmp;

  write_Packet_Size <= write_Packet_Size_tmp;

  write_SSR_Mode <= write_SSR_Mode_tmp;

  write_Units <= write_Units_tmp;

  write_Type <= write_Type_tmp;

  write_Vrms <= write_Vrms_tmp;

  write_Type_Scale <= write_Type_Scale_tmp;

  write_Power_Scale <= write_Power_Scale_tmp;

  write_Selector <= write_Selector_tmp;

  write_WLength <= write_WLength_tmp;

  write_WAddress <= write_WAddress_tmp;

  write_WEnable <= write_WEnable_tmp;

  write_Length <= write_Length_tmp;

  write_Buffer_Address_1 <= write_Buffer_Address_1_tmp;

  write_Buffer_Address_2 <= write_Buffer_Address_2_tmp;

  write_Buffer_Address_3 <= write_Buffer_Address_3_tmp;

  write_Enable <= write_Enable_tmp;

  write_Count <= write_Count_tmp;

END rtl;

