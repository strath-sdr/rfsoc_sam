-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\spectrum_analyser\SpectrumAnalyser_src_TWDLROM_5_1_block6.vhd
-- Created: 2021-01-04 00:54:54
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: SpectrumAnalyser_src_TWDLROM_5_1_block6
-- Source Path: spectrum_analyser/Spectrum Analyser/Spectrum Analyser/Spectrum Analyser Core/FFT and Spectrum Processing/FFT 
-- Core/FFT HDL Optimized 8192/TWDLROM_5_
-- Hierarchy Level: 6
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.SpectrumAnalyser_src_Spectrum_Analyser_pkg.ALL;

ENTITY SpectrumAnalyser_src_TWDLROM_5_1_block6 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_16_0                        :   IN    std_logic;
        dout_4_1_vld                      :   IN    std_logic;
        softReset                         :   IN    std_logic;
        twdl_5_1_re                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        twdl_5_1_im                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        twdl_5_1_vld                      :   OUT   std_logic
        );
END SpectrumAnalyser_src_TWDLROM_5_1_block6;


ARCHITECTURE rtl OF SpectrumAnalyser_src_TWDLROM_5_1_block6 IS

  -- Constants
  CONSTANT Twiddle_re_table_data          : vector_of_signed16(0 TO 1023) := 
    (to_signed(16#4000#, 16), to_signed(16#4000#, 16), to_signed(16#4000#, 16), to_signed(16#4000#, 16),
     to_signed(16#4000#, 16), to_signed(16#4000#, 16), to_signed(16#4000#, 16), to_signed(16#4000#, 16),
     to_signed(16#4000#, 16), to_signed(16#4000#, 16), to_signed(16#4000#, 16), to_signed(16#3FFF#, 16),
     to_signed(16#3FFF#, 16), to_signed(16#3FFF#, 16), to_signed(16#3FFF#, 16), to_signed(16#3FFF#, 16),
     to_signed(16#3FFF#, 16), to_signed(16#3FFF#, 16), to_signed(16#3FFE#, 16), to_signed(16#3FFE#, 16),
     to_signed(16#3FFE#, 16), to_signed(16#3FFE#, 16), to_signed(16#3FFE#, 16), to_signed(16#3FFD#, 16),
     to_signed(16#3FFD#, 16), to_signed(16#3FFD#, 16), to_signed(16#3FFD#, 16), to_signed(16#3FFC#, 16),
     to_signed(16#3FFC#, 16), to_signed(16#3FFC#, 16), to_signed(16#3FFC#, 16), to_signed(16#3FFB#, 16),
     to_signed(16#3FFB#, 16), to_signed(16#3FFB#, 16), to_signed(16#3FFA#, 16), to_signed(16#3FFA#, 16),
     to_signed(16#3FFA#, 16), to_signed(16#3FF9#, 16), to_signed(16#3FF9#, 16), to_signed(16#3FF9#, 16),
     to_signed(16#3FF8#, 16), to_signed(16#3FF8#, 16), to_signed(16#3FF7#, 16), to_signed(16#3FF7#, 16),
     to_signed(16#3FF7#, 16), to_signed(16#3FF6#, 16), to_signed(16#3FF6#, 16), to_signed(16#3FF5#, 16),
     to_signed(16#3FF5#, 16), to_signed(16#3FF4#, 16), to_signed(16#3FF4#, 16), to_signed(16#3FF3#, 16),
     to_signed(16#3FF3#, 16), to_signed(16#3FF2#, 16), to_signed(16#3FF2#, 16), to_signed(16#3FF1#, 16),
     to_signed(16#3FF1#, 16), to_signed(16#3FF0#, 16), to_signed(16#3FF0#, 16), to_signed(16#3FEF#, 16),
     to_signed(16#3FEF#, 16), to_signed(16#3FEE#, 16), to_signed(16#3FED#, 16), to_signed(16#3FED#, 16),
     to_signed(16#3FEC#, 16), to_signed(16#3FEC#, 16), to_signed(16#3FEB#, 16), to_signed(16#3FEA#, 16),
     to_signed(16#3FEA#, 16), to_signed(16#3FE9#, 16), to_signed(16#3FE8#, 16), to_signed(16#3FE8#, 16),
     to_signed(16#3FE7#, 16), to_signed(16#3FE6#, 16), to_signed(16#3FE6#, 16), to_signed(16#3FE5#, 16),
     to_signed(16#3FE4#, 16), to_signed(16#3FE3#, 16), to_signed(16#3FE3#, 16), to_signed(16#3FE2#, 16),
     to_signed(16#3FE1#, 16), to_signed(16#3FE0#, 16), to_signed(16#3FE0#, 16), to_signed(16#3FDF#, 16),
     to_signed(16#3FDE#, 16), to_signed(16#3FDD#, 16), to_signed(16#3FDC#, 16), to_signed(16#3FDC#, 16),
     to_signed(16#3FDB#, 16), to_signed(16#3FDA#, 16), to_signed(16#3FD9#, 16), to_signed(16#3FD8#, 16),
     to_signed(16#3FD7#, 16), to_signed(16#3FD6#, 16), to_signed(16#3FD5#, 16), to_signed(16#3FD5#, 16),
     to_signed(16#3FD4#, 16), to_signed(16#3FD3#, 16), to_signed(16#3FD2#, 16), to_signed(16#3FD1#, 16),
     to_signed(16#3FD0#, 16), to_signed(16#3FCF#, 16), to_signed(16#3FCE#, 16), to_signed(16#3FCD#, 16),
     to_signed(16#3FCC#, 16), to_signed(16#3FCB#, 16), to_signed(16#3FCA#, 16), to_signed(16#3FC9#, 16),
     to_signed(16#3FC8#, 16), to_signed(16#3FC7#, 16), to_signed(16#3FC6#, 16), to_signed(16#3FC5#, 16),
     to_signed(16#3FC4#, 16), to_signed(16#3FC3#, 16), to_signed(16#3FC1#, 16), to_signed(16#3FC0#, 16),
     to_signed(16#3FBF#, 16), to_signed(16#3FBE#, 16), to_signed(16#3FBD#, 16), to_signed(16#3FBC#, 16),
     to_signed(16#3FBB#, 16), to_signed(16#3FB9#, 16), to_signed(16#3FB8#, 16), to_signed(16#3FB7#, 16),
     to_signed(16#3FB6#, 16), to_signed(16#3FB5#, 16), to_signed(16#3FB4#, 16), to_signed(16#3FB2#, 16),
     to_signed(16#3FB1#, 16), to_signed(16#3FB0#, 16), to_signed(16#3FAF#, 16), to_signed(16#3FAD#, 16),
     to_signed(16#3FAC#, 16), to_signed(16#3FAB#, 16), to_signed(16#3FAA#, 16), to_signed(16#3FA8#, 16),
     to_signed(16#3FA7#, 16), to_signed(16#3FA6#, 16), to_signed(16#3FA4#, 16), to_signed(16#3FA3#, 16),
     to_signed(16#3FA2#, 16), to_signed(16#3FA0#, 16), to_signed(16#3F9F#, 16), to_signed(16#3F9E#, 16),
     to_signed(16#3F9C#, 16), to_signed(16#3F9B#, 16), to_signed(16#3F99#, 16), to_signed(16#3F98#, 16),
     to_signed(16#3F97#, 16), to_signed(16#3F95#, 16), to_signed(16#3F94#, 16), to_signed(16#3F92#, 16),
     to_signed(16#3F91#, 16), to_signed(16#3F8F#, 16), to_signed(16#3F8E#, 16), to_signed(16#3F8C#, 16),
     to_signed(16#3F8B#, 16), to_signed(16#3F89#, 16), to_signed(16#3F88#, 16), to_signed(16#3F86#, 16),
     to_signed(16#3F85#, 16), to_signed(16#3F83#, 16), to_signed(16#3F82#, 16), to_signed(16#3F80#, 16),
     to_signed(16#3F7F#, 16), to_signed(16#3F7D#, 16), to_signed(16#3F7B#, 16), to_signed(16#3F7A#, 16),
     to_signed(16#3F78#, 16), to_signed(16#3F77#, 16), to_signed(16#3F75#, 16), to_signed(16#3F73#, 16),
     to_signed(16#3F72#, 16), to_signed(16#3F70#, 16), to_signed(16#3F6E#, 16), to_signed(16#3F6D#, 16),
     to_signed(16#3F6B#, 16), to_signed(16#3F69#, 16), to_signed(16#3F68#, 16), to_signed(16#3F66#, 16),
     to_signed(16#3F64#, 16), to_signed(16#3F62#, 16), to_signed(16#3F61#, 16), to_signed(16#3F5F#, 16),
     to_signed(16#3F5D#, 16), to_signed(16#3F5B#, 16), to_signed(16#3F5A#, 16), to_signed(16#3F58#, 16),
     to_signed(16#3F56#, 16), to_signed(16#3F54#, 16), to_signed(16#3F52#, 16), to_signed(16#3F51#, 16),
     to_signed(16#3F4F#, 16), to_signed(16#3F4D#, 16), to_signed(16#3F4B#, 16), to_signed(16#3F49#, 16),
     to_signed(16#3F47#, 16), to_signed(16#3F45#, 16), to_signed(16#3F43#, 16), to_signed(16#3F42#, 16),
     to_signed(16#3F40#, 16), to_signed(16#3F3E#, 16), to_signed(16#3F3C#, 16), to_signed(16#3F3A#, 16),
     to_signed(16#3F38#, 16), to_signed(16#3F36#, 16), to_signed(16#3F34#, 16), to_signed(16#3F32#, 16),
     to_signed(16#3F30#, 16), to_signed(16#3F2E#, 16), to_signed(16#3F2C#, 16), to_signed(16#3F2A#, 16),
     to_signed(16#3F28#, 16), to_signed(16#3F26#, 16), to_signed(16#3F24#, 16), to_signed(16#3F22#, 16),
     to_signed(16#3F20#, 16), to_signed(16#3F1E#, 16), to_signed(16#3F1C#, 16), to_signed(16#3F19#, 16),
     to_signed(16#3F17#, 16), to_signed(16#3F15#, 16), to_signed(16#3F13#, 16), to_signed(16#3F11#, 16),
     to_signed(16#3F0F#, 16), to_signed(16#3F0D#, 16), to_signed(16#3F0A#, 16), to_signed(16#3F08#, 16),
     to_signed(16#3F06#, 16), to_signed(16#3F04#, 16), to_signed(16#3F02#, 16), to_signed(16#3F00#, 16),
     to_signed(16#3EFD#, 16), to_signed(16#3EFB#, 16), to_signed(16#3EF9#, 16), to_signed(16#3EF7#, 16),
     to_signed(16#3EF4#, 16), to_signed(16#3EF2#, 16), to_signed(16#3EF0#, 16), to_signed(16#3EED#, 16),
     to_signed(16#3EEB#, 16), to_signed(16#3EE9#, 16), to_signed(16#3EE7#, 16), to_signed(16#3EE4#, 16),
     to_signed(16#3EE2#, 16), to_signed(16#3EE0#, 16), to_signed(16#3EDD#, 16), to_signed(16#3EDB#, 16),
     to_signed(16#3ED8#, 16), to_signed(16#3ED6#, 16), to_signed(16#3ED4#, 16), to_signed(16#3ED1#, 16),
     to_signed(16#3ECF#, 16), to_signed(16#3ECC#, 16), to_signed(16#3ECA#, 16), to_signed(16#3EC8#, 16),
     to_signed(16#3EC5#, 16), to_signed(16#3EC3#, 16), to_signed(16#3EC0#, 16), to_signed(16#3EBE#, 16),
     to_signed(16#3EBB#, 16), to_signed(16#3EB9#, 16), to_signed(16#3EB6#, 16), to_signed(16#3EB4#, 16),
     to_signed(16#3EB1#, 16), to_signed(16#3EAF#, 16), to_signed(16#3EAC#, 16), to_signed(16#3EAA#, 16),
     to_signed(16#3EA7#, 16), to_signed(16#3EA5#, 16), to_signed(16#3EA2#, 16), to_signed(16#3E9F#, 16),
     to_signed(16#3E9D#, 16), to_signed(16#3E9A#, 16), to_signed(16#3E98#, 16), to_signed(16#3E95#, 16),
     to_signed(16#3E92#, 16), to_signed(16#3E90#, 16), to_signed(16#3E8D#, 16), to_signed(16#3E8A#, 16),
     to_signed(16#3E88#, 16), to_signed(16#3E85#, 16), to_signed(16#3E82#, 16), to_signed(16#3E80#, 16),
     to_signed(16#3E7D#, 16), to_signed(16#3E7A#, 16), to_signed(16#3E77#, 16), to_signed(16#3E75#, 16),
     to_signed(16#3E72#, 16), to_signed(16#3E6F#, 16), to_signed(16#3E6C#, 16), to_signed(16#3E6A#, 16),
     to_signed(16#3E67#, 16), to_signed(16#3E64#, 16), to_signed(16#3E61#, 16), to_signed(16#3E5E#, 16),
     to_signed(16#3E5C#, 16), to_signed(16#3E59#, 16), to_signed(16#3E56#, 16), to_signed(16#3E53#, 16),
     to_signed(16#3E50#, 16), to_signed(16#3E4D#, 16), to_signed(16#3E4A#, 16), to_signed(16#3E48#, 16),
     to_signed(16#3E45#, 16), to_signed(16#3E42#, 16), to_signed(16#3E3F#, 16), to_signed(16#3E3C#, 16),
     to_signed(16#3E39#, 16), to_signed(16#3E36#, 16), to_signed(16#3E33#, 16), to_signed(16#3E30#, 16),
     to_signed(16#3E2D#, 16), to_signed(16#3E2A#, 16), to_signed(16#3E27#, 16), to_signed(16#3E24#, 16),
     to_signed(16#3E21#, 16), to_signed(16#3E1E#, 16), to_signed(16#3E1B#, 16), to_signed(16#3E18#, 16),
     to_signed(16#3E15#, 16), to_signed(16#3E12#, 16), to_signed(16#3E0F#, 16), to_signed(16#3E0C#, 16),
     to_signed(16#3E09#, 16), to_signed(16#3E06#, 16), to_signed(16#3E03#, 16), to_signed(16#3DFF#, 16),
     to_signed(16#3DFC#, 16), to_signed(16#3DF9#, 16), to_signed(16#3DF6#, 16), to_signed(16#3DF3#, 16),
     to_signed(16#3DF0#, 16), to_signed(16#3DED#, 16), to_signed(16#3DE9#, 16), to_signed(16#3DE6#, 16),
     to_signed(16#3DE3#, 16), to_signed(16#3DE0#, 16), to_signed(16#3DDD#, 16), to_signed(16#3DD9#, 16),
     to_signed(16#3DD6#, 16), to_signed(16#3DD3#, 16), to_signed(16#3DD0#, 16), to_signed(16#3DCC#, 16),
     to_signed(16#3DC9#, 16), to_signed(16#3DC6#, 16), to_signed(16#3DC2#, 16), to_signed(16#3DBF#, 16),
     to_signed(16#3DBC#, 16), to_signed(16#3DB9#, 16), to_signed(16#3DB5#, 16), to_signed(16#3DB2#, 16),
     to_signed(16#3DAF#, 16), to_signed(16#3DAB#, 16), to_signed(16#3DA8#, 16), to_signed(16#3DA4#, 16),
     to_signed(16#3DA1#, 16), to_signed(16#3D9E#, 16), to_signed(16#3D9A#, 16), to_signed(16#3D97#, 16),
     to_signed(16#3D93#, 16), to_signed(16#3D90#, 16), to_signed(16#3D8D#, 16), to_signed(16#3D89#, 16),
     to_signed(16#3D86#, 16), to_signed(16#3D82#, 16), to_signed(16#3D7F#, 16), to_signed(16#3D7B#, 16),
     to_signed(16#3D78#, 16), to_signed(16#3D74#, 16), to_signed(16#3D71#, 16), to_signed(16#3D6D#, 16),
     to_signed(16#3D6A#, 16), to_signed(16#3D66#, 16), to_signed(16#3D63#, 16), to_signed(16#3D5F#, 16),
     to_signed(16#3D5B#, 16), to_signed(16#3D58#, 16), to_signed(16#3D54#, 16), to_signed(16#3D51#, 16),
     to_signed(16#3D4D#, 16), to_signed(16#3D49#, 16), to_signed(16#3D46#, 16), to_signed(16#3D42#, 16),
     to_signed(16#3D3F#, 16), to_signed(16#3D3B#, 16), to_signed(16#3D37#, 16), to_signed(16#3D34#, 16),
     to_signed(16#3D30#, 16), to_signed(16#3D2C#, 16), to_signed(16#3D28#, 16), to_signed(16#3D25#, 16),
     to_signed(16#3D21#, 16), to_signed(16#3D1D#, 16), to_signed(16#3D1A#, 16), to_signed(16#3D16#, 16),
     to_signed(16#3D12#, 16), to_signed(16#3D0E#, 16), to_signed(16#3D0B#, 16), to_signed(16#3D07#, 16),
     to_signed(16#3D03#, 16), to_signed(16#3CFF#, 16), to_signed(16#3CFB#, 16), to_signed(16#3CF8#, 16),
     to_signed(16#3CF4#, 16), to_signed(16#3CF0#, 16), to_signed(16#3CEC#, 16), to_signed(16#3CE8#, 16),
     to_signed(16#3CE4#, 16), to_signed(16#3CE0#, 16), to_signed(16#3CDD#, 16), to_signed(16#3CD9#, 16),
     to_signed(16#3CD5#, 16), to_signed(16#3CD1#, 16), to_signed(16#3CCD#, 16), to_signed(16#3CC9#, 16),
     to_signed(16#3CC5#, 16), to_signed(16#3CC1#, 16), to_signed(16#3CBD#, 16), to_signed(16#3CB9#, 16),
     to_signed(16#3CB5#, 16), to_signed(16#3CB1#, 16), to_signed(16#3CAD#, 16), to_signed(16#3CA9#, 16),
     to_signed(16#3CA5#, 16), to_signed(16#3CA1#, 16), to_signed(16#3C9D#, 16), to_signed(16#3C99#, 16),
     to_signed(16#3C95#, 16), to_signed(16#3C91#, 16), to_signed(16#3C8D#, 16), to_signed(16#3C89#, 16),
     to_signed(16#3C85#, 16), to_signed(16#3C81#, 16), to_signed(16#3C7D#, 16), to_signed(16#3C79#, 16),
     to_signed(16#3C74#, 16), to_signed(16#3C70#, 16), to_signed(16#3C6C#, 16), to_signed(16#3C68#, 16),
     to_signed(16#3C64#, 16), to_signed(16#3C60#, 16), to_signed(16#3C5B#, 16), to_signed(16#3C57#, 16),
     to_signed(16#3C53#, 16), to_signed(16#3C4F#, 16), to_signed(16#3C4B#, 16), to_signed(16#3C46#, 16),
     to_signed(16#3C42#, 16), to_signed(16#3C3E#, 16), to_signed(16#3C3A#, 16), to_signed(16#3C36#, 16),
     to_signed(16#3C31#, 16), to_signed(16#3C2D#, 16), to_signed(16#3C29#, 16), to_signed(16#3C24#, 16),
     to_signed(16#3C20#, 16), to_signed(16#3C1C#, 16), to_signed(16#3C17#, 16), to_signed(16#3C13#, 16),
     to_signed(16#3C0F#, 16), to_signed(16#3C0A#, 16), to_signed(16#3C06#, 16), to_signed(16#3C02#, 16),
     to_signed(16#3BFD#, 16), to_signed(16#3BF9#, 16), to_signed(16#3BF5#, 16), to_signed(16#3BF0#, 16),
     to_signed(16#3BEC#, 16), to_signed(16#3BE7#, 16), to_signed(16#3BE3#, 16), to_signed(16#3BDE#, 16),
     to_signed(16#3BDA#, 16), to_signed(16#3BD6#, 16), to_signed(16#3BD1#, 16), to_signed(16#3BCD#, 16),
     to_signed(16#3BC8#, 16), to_signed(16#3BC4#, 16), to_signed(16#3BBF#, 16), to_signed(16#3BBB#, 16),
     to_signed(16#3BB6#, 16), to_signed(16#3BB2#, 16), to_signed(16#3BAD#, 16), to_signed(16#3BA9#, 16),
     to_signed(16#3BA4#, 16), to_signed(16#3B9F#, 16), to_signed(16#3B9B#, 16), to_signed(16#3B96#, 16),
     to_signed(16#3B92#, 16), to_signed(16#3B8D#, 16), to_signed(16#3B88#, 16), to_signed(16#3B84#, 16),
     to_signed(16#3B7F#, 16), to_signed(16#3B7B#, 16), to_signed(16#3B76#, 16), to_signed(16#3B71#, 16),
     to_signed(16#3B6D#, 16), to_signed(16#3B68#, 16), to_signed(16#3B63#, 16), to_signed(16#3B5F#, 16),
     to_signed(16#3B5A#, 16), to_signed(16#3B55#, 16), to_signed(16#3B50#, 16), to_signed(16#3B4C#, 16),
     to_signed(16#3B47#, 16), to_signed(16#3B42#, 16), to_signed(16#3B3E#, 16), to_signed(16#3B39#, 16),
     to_signed(16#3B34#, 16), to_signed(16#3B2F#, 16), to_signed(16#3B2A#, 16), to_signed(16#3B26#, 16),
     to_signed(16#3B21#, 16), to_signed(16#3B1C#, 16), to_signed(16#3B17#, 16), to_signed(16#3B12#, 16),
     to_signed(16#3B0E#, 16), to_signed(16#3B09#, 16), to_signed(16#3B04#, 16), to_signed(16#3AFF#, 16),
     to_signed(16#3AFA#, 16), to_signed(16#3AF5#, 16), to_signed(16#3AF0#, 16), to_signed(16#3AEB#, 16),
     to_signed(16#3AE6#, 16), to_signed(16#3AE2#, 16), to_signed(16#3ADD#, 16), to_signed(16#3AD8#, 16),
     to_signed(16#3AD3#, 16), to_signed(16#3ACE#, 16), to_signed(16#3AC9#, 16), to_signed(16#3AC4#, 16),
     to_signed(16#3ABF#, 16), to_signed(16#3ABA#, 16), to_signed(16#3AB5#, 16), to_signed(16#3AB0#, 16),
     to_signed(16#3AAB#, 16), to_signed(16#3AA6#, 16), to_signed(16#3AA1#, 16), to_signed(16#3A9C#, 16),
     to_signed(16#3A97#, 16), to_signed(16#3A92#, 16), to_signed(16#3A8D#, 16), to_signed(16#3A88#, 16),
     to_signed(16#3A82#, 16), to_signed(16#3A7D#, 16), to_signed(16#3A78#, 16), to_signed(16#3A73#, 16),
     to_signed(16#3A6E#, 16), to_signed(16#3A69#, 16), to_signed(16#3A64#, 16), to_signed(16#3A5F#, 16),
     to_signed(16#3A59#, 16), to_signed(16#3A54#, 16), to_signed(16#3A4F#, 16), to_signed(16#3A4A#, 16),
     to_signed(16#3A45#, 16), to_signed(16#3A3F#, 16), to_signed(16#3A3A#, 16), to_signed(16#3A35#, 16),
     to_signed(16#3A30#, 16), to_signed(16#3A2B#, 16), to_signed(16#3A25#, 16), to_signed(16#3A20#, 16),
     to_signed(16#3A1B#, 16), to_signed(16#3A16#, 16), to_signed(16#3A10#, 16), to_signed(16#3A0B#, 16),
     to_signed(16#3A06#, 16), to_signed(16#3A00#, 16), to_signed(16#39FB#, 16), to_signed(16#39F6#, 16),
     to_signed(16#39F0#, 16), to_signed(16#39EB#, 16), to_signed(16#39E6#, 16), to_signed(16#39E0#, 16),
     to_signed(16#39DB#, 16), to_signed(16#39D6#, 16), to_signed(16#39D0#, 16), to_signed(16#39CB#, 16),
     to_signed(16#39C5#, 16), to_signed(16#39C0#, 16), to_signed(16#39BB#, 16), to_signed(16#39B5#, 16),
     to_signed(16#39B0#, 16), to_signed(16#39AA#, 16), to_signed(16#39A5#, 16), to_signed(16#399F#, 16),
     to_signed(16#399A#, 16), to_signed(16#3994#, 16), to_signed(16#398F#, 16), to_signed(16#3989#, 16),
     to_signed(16#3984#, 16), to_signed(16#397E#, 16), to_signed(16#3979#, 16), to_signed(16#3973#, 16),
     to_signed(16#396E#, 16), to_signed(16#3968#, 16), to_signed(16#3963#, 16), to_signed(16#395D#, 16),
     to_signed(16#3958#, 16), to_signed(16#3952#, 16), to_signed(16#394C#, 16), to_signed(16#3947#, 16),
     to_signed(16#3941#, 16), to_signed(16#393B#, 16), to_signed(16#3936#, 16), to_signed(16#3930#, 16),
     to_signed(16#392B#, 16), to_signed(16#3925#, 16), to_signed(16#391F#, 16), to_signed(16#391A#, 16),
     to_signed(16#3914#, 16), to_signed(16#390E#, 16), to_signed(16#3909#, 16), to_signed(16#3903#, 16),
     to_signed(16#38FD#, 16), to_signed(16#38F7#, 16), to_signed(16#38F2#, 16), to_signed(16#38EC#, 16),
     to_signed(16#38E6#, 16), to_signed(16#38E0#, 16), to_signed(16#38DB#, 16), to_signed(16#38D5#, 16),
     to_signed(16#38CF#, 16), to_signed(16#38C9#, 16), to_signed(16#38C3#, 16), to_signed(16#38BE#, 16),
     to_signed(16#38B8#, 16), to_signed(16#38B2#, 16), to_signed(16#38AC#, 16), to_signed(16#38A6#, 16),
     to_signed(16#38A1#, 16), to_signed(16#389B#, 16), to_signed(16#3895#, 16), to_signed(16#388F#, 16),
     to_signed(16#3889#, 16), to_signed(16#3883#, 16), to_signed(16#387D#, 16), to_signed(16#3877#, 16),
     to_signed(16#3871#, 16), to_signed(16#386B#, 16), to_signed(16#3866#, 16), to_signed(16#3860#, 16),
     to_signed(16#385A#, 16), to_signed(16#3854#, 16), to_signed(16#384E#, 16), to_signed(16#3848#, 16),
     to_signed(16#3842#, 16), to_signed(16#383C#, 16), to_signed(16#3836#, 16), to_signed(16#3830#, 16),
     to_signed(16#382A#, 16), to_signed(16#3824#, 16), to_signed(16#381E#, 16), to_signed(16#3818#, 16),
     to_signed(16#3812#, 16), to_signed(16#380B#, 16), to_signed(16#3805#, 16), to_signed(16#37FF#, 16),
     to_signed(16#37F9#, 16), to_signed(16#37F3#, 16), to_signed(16#37ED#, 16), to_signed(16#37E7#, 16),
     to_signed(16#37E1#, 16), to_signed(16#37DB#, 16), to_signed(16#37D5#, 16), to_signed(16#37CE#, 16),
     to_signed(16#37C8#, 16), to_signed(16#37C2#, 16), to_signed(16#37BC#, 16), to_signed(16#37B6#, 16),
     to_signed(16#37B0#, 16), to_signed(16#37A9#, 16), to_signed(16#37A3#, 16), to_signed(16#379D#, 16),
     to_signed(16#3797#, 16), to_signed(16#3790#, 16), to_signed(16#378A#, 16), to_signed(16#3784#, 16),
     to_signed(16#377E#, 16), to_signed(16#3777#, 16), to_signed(16#3771#, 16), to_signed(16#376B#, 16),
     to_signed(16#3765#, 16), to_signed(16#375E#, 16), to_signed(16#3758#, 16), to_signed(16#3752#, 16),
     to_signed(16#374B#, 16), to_signed(16#3745#, 16), to_signed(16#373F#, 16), to_signed(16#3738#, 16),
     to_signed(16#3732#, 16), to_signed(16#372C#, 16), to_signed(16#3725#, 16), to_signed(16#371F#, 16),
     to_signed(16#3718#, 16), to_signed(16#3712#, 16), to_signed(16#370C#, 16), to_signed(16#3705#, 16),
     to_signed(16#36FF#, 16), to_signed(16#36F8#, 16), to_signed(16#36F2#, 16), to_signed(16#36EB#, 16),
     to_signed(16#36E5#, 16), to_signed(16#36DF#, 16), to_signed(16#36D8#, 16), to_signed(16#36D2#, 16),
     to_signed(16#36CB#, 16), to_signed(16#36C5#, 16), to_signed(16#36BE#, 16), to_signed(16#36B8#, 16),
     to_signed(16#36B1#, 16), to_signed(16#36AB#, 16), to_signed(16#36A4#, 16), to_signed(16#369D#, 16),
     to_signed(16#3697#, 16), to_signed(16#3690#, 16), to_signed(16#368A#, 16), to_signed(16#3683#, 16),
     to_signed(16#367D#, 16), to_signed(16#3676#, 16), to_signed(16#366F#, 16), to_signed(16#3669#, 16),
     to_signed(16#3662#, 16), to_signed(16#365C#, 16), to_signed(16#3655#, 16), to_signed(16#364E#, 16),
     to_signed(16#3648#, 16), to_signed(16#3641#, 16), to_signed(16#363A#, 16), to_signed(16#3634#, 16),
     to_signed(16#362D#, 16), to_signed(16#3626#, 16), to_signed(16#3620#, 16), to_signed(16#3619#, 16),
     to_signed(16#3612#, 16), to_signed(16#360B#, 16), to_signed(16#3605#, 16), to_signed(16#35FE#, 16),
     to_signed(16#35F7#, 16), to_signed(16#35F0#, 16), to_signed(16#35EA#, 16), to_signed(16#35E3#, 16),
     to_signed(16#35DC#, 16), to_signed(16#35D5#, 16), to_signed(16#35CE#, 16), to_signed(16#35C8#, 16),
     to_signed(16#35C1#, 16), to_signed(16#35BA#, 16), to_signed(16#35B3#, 16), to_signed(16#35AC#, 16),
     to_signed(16#35A5#, 16), to_signed(16#359F#, 16), to_signed(16#3598#, 16), to_signed(16#3591#, 16),
     to_signed(16#358A#, 16), to_signed(16#3583#, 16), to_signed(16#357C#, 16), to_signed(16#3575#, 16),
     to_signed(16#356E#, 16), to_signed(16#3567#, 16), to_signed(16#3561#, 16), to_signed(16#355A#, 16),
     to_signed(16#3553#, 16), to_signed(16#354C#, 16), to_signed(16#3545#, 16), to_signed(16#353E#, 16),
     to_signed(16#3537#, 16), to_signed(16#3530#, 16), to_signed(16#3529#, 16), to_signed(16#3522#, 16),
     to_signed(16#351B#, 16), to_signed(16#3514#, 16), to_signed(16#350D#, 16), to_signed(16#3506#, 16),
     to_signed(16#34FF#, 16), to_signed(16#34F8#, 16), to_signed(16#34F1#, 16), to_signed(16#34EA#, 16),
     to_signed(16#34E2#, 16), to_signed(16#34DB#, 16), to_signed(16#34D4#, 16), to_signed(16#34CD#, 16),
     to_signed(16#34C6#, 16), to_signed(16#34BF#, 16), to_signed(16#34B8#, 16), to_signed(16#34B1#, 16),
     to_signed(16#34AA#, 16), to_signed(16#34A2#, 16), to_signed(16#349B#, 16), to_signed(16#3494#, 16),
     to_signed(16#348D#, 16), to_signed(16#3486#, 16), to_signed(16#347F#, 16), to_signed(16#3477#, 16),
     to_signed(16#3470#, 16), to_signed(16#3469#, 16), to_signed(16#3462#, 16), to_signed(16#345B#, 16),
     to_signed(16#3453#, 16), to_signed(16#344C#, 16), to_signed(16#3445#, 16), to_signed(16#343E#, 16),
     to_signed(16#3436#, 16), to_signed(16#342F#, 16), to_signed(16#3428#, 16), to_signed(16#3420#, 16),
     to_signed(16#3419#, 16), to_signed(16#3412#, 16), to_signed(16#340B#, 16), to_signed(16#3403#, 16),
     to_signed(16#33FC#, 16), to_signed(16#33F5#, 16), to_signed(16#33ED#, 16), to_signed(16#33E6#, 16),
     to_signed(16#33DF#, 16), to_signed(16#33D7#, 16), to_signed(16#33D0#, 16), to_signed(16#33C8#, 16),
     to_signed(16#33C1#, 16), to_signed(16#33BA#, 16), to_signed(16#33B2#, 16), to_signed(16#33AB#, 16),
     to_signed(16#33A3#, 16), to_signed(16#339C#, 16), to_signed(16#3395#, 16), to_signed(16#338D#, 16),
     to_signed(16#3386#, 16), to_signed(16#337E#, 16), to_signed(16#3377#, 16), to_signed(16#336F#, 16),
     to_signed(16#3368#, 16), to_signed(16#3360#, 16), to_signed(16#3359#, 16), to_signed(16#3351#, 16),
     to_signed(16#334A#, 16), to_signed(16#3342#, 16), to_signed(16#333B#, 16), to_signed(16#3333#, 16),
     to_signed(16#332C#, 16), to_signed(16#3324#, 16), to_signed(16#331D#, 16), to_signed(16#3315#, 16),
     to_signed(16#330D#, 16), to_signed(16#3306#, 16), to_signed(16#32FE#, 16), to_signed(16#32F7#, 16),
     to_signed(16#32EF#, 16), to_signed(16#32E7#, 16), to_signed(16#32E0#, 16), to_signed(16#32D8#, 16),
     to_signed(16#32D0#, 16), to_signed(16#32C9#, 16), to_signed(16#32C1#, 16), to_signed(16#32BA#, 16),
     to_signed(16#32B2#, 16), to_signed(16#32AA#, 16), to_signed(16#32A3#, 16), to_signed(16#329B#, 16),
     to_signed(16#3293#, 16), to_signed(16#328B#, 16), to_signed(16#3284#, 16), to_signed(16#327C#, 16),
     to_signed(16#3274#, 16), to_signed(16#326D#, 16), to_signed(16#3265#, 16), to_signed(16#325D#, 16),
     to_signed(16#3255#, 16), to_signed(16#324E#, 16), to_signed(16#3246#, 16), to_signed(16#323E#, 16),
     to_signed(16#3236#, 16), to_signed(16#322E#, 16), to_signed(16#3227#, 16), to_signed(16#321F#, 16),
     to_signed(16#3217#, 16), to_signed(16#320F#, 16), to_signed(16#3207#, 16), to_signed(16#31FF#, 16),
     to_signed(16#31F8#, 16), to_signed(16#31F0#, 16), to_signed(16#31E8#, 16), to_signed(16#31E0#, 16),
     to_signed(16#31D8#, 16), to_signed(16#31D0#, 16), to_signed(16#31C8#, 16), to_signed(16#31C0#, 16),
     to_signed(16#31B9#, 16), to_signed(16#31B1#, 16), to_signed(16#31A9#, 16), to_signed(16#31A1#, 16),
     to_signed(16#3199#, 16), to_signed(16#3191#, 16), to_signed(16#3189#, 16), to_signed(16#3181#, 16),
     to_signed(16#3179#, 16), to_signed(16#3171#, 16), to_signed(16#3169#, 16), to_signed(16#3161#, 16),
     to_signed(16#3159#, 16), to_signed(16#3151#, 16), to_signed(16#3149#, 16), to_signed(16#3141#, 16),
     to_signed(16#3139#, 16), to_signed(16#3131#, 16), to_signed(16#3129#, 16), to_signed(16#3121#, 16),
     to_signed(16#3119#, 16), to_signed(16#3111#, 16), to_signed(16#3109#, 16), to_signed(16#3101#, 16),
     to_signed(16#30F9#, 16), to_signed(16#30F0#, 16), to_signed(16#30E8#, 16), to_signed(16#30E0#, 16),
     to_signed(16#30D8#, 16), to_signed(16#30D0#, 16), to_signed(16#30C8#, 16), to_signed(16#30C0#, 16),
     to_signed(16#30B8#, 16), to_signed(16#30AF#, 16), to_signed(16#30A7#, 16), to_signed(16#309F#, 16),
     to_signed(16#3097#, 16), to_signed(16#308F#, 16), to_signed(16#3087#, 16), to_signed(16#307E#, 16),
     to_signed(16#3076#, 16), to_signed(16#306E#, 16), to_signed(16#3066#, 16), to_signed(16#305D#, 16),
     to_signed(16#3055#, 16), to_signed(16#304D#, 16), to_signed(16#3045#, 16), to_signed(16#303C#, 16),
     to_signed(16#3034#, 16), to_signed(16#302C#, 16), to_signed(16#3024#, 16), to_signed(16#301B#, 16),
     to_signed(16#3013#, 16), to_signed(16#300B#, 16), to_signed(16#3002#, 16), to_signed(16#2FFA#, 16),
     to_signed(16#2FF2#, 16), to_signed(16#2FEA#, 16), to_signed(16#2FE1#, 16), to_signed(16#2FD9#, 16),
     to_signed(16#2FD0#, 16), to_signed(16#2FC8#, 16), to_signed(16#2FC0#, 16), to_signed(16#2FB7#, 16),
     to_signed(16#2FAF#, 16), to_signed(16#2FA7#, 16), to_signed(16#2F9E#, 16), to_signed(16#2F96#, 16),
     to_signed(16#2F8D#, 16), to_signed(16#2F85#, 16), to_signed(16#2F7D#, 16), to_signed(16#2F74#, 16),
     to_signed(16#2F6C#, 16), to_signed(16#2F63#, 16), to_signed(16#2F5B#, 16), to_signed(16#2F52#, 16),
     to_signed(16#2F4A#, 16), to_signed(16#2F41#, 16), to_signed(16#2F39#, 16), to_signed(16#2F30#, 16),
     to_signed(16#2F28#, 16), to_signed(16#2F20#, 16), to_signed(16#2F17#, 16), to_signed(16#2F0E#, 16),
     to_signed(16#2F06#, 16), to_signed(16#2EFD#, 16), to_signed(16#2EF5#, 16), to_signed(16#2EEC#, 16),
     to_signed(16#2EE4#, 16), to_signed(16#2EDB#, 16), to_signed(16#2ED3#, 16), to_signed(16#2ECA#, 16),
     to_signed(16#2EC2#, 16), to_signed(16#2EB9#, 16), to_signed(16#2EB0#, 16), to_signed(16#2EA8#, 16),
     to_signed(16#2E9F#, 16), to_signed(16#2E97#, 16), to_signed(16#2E8E#, 16), to_signed(16#2E85#, 16),
     to_signed(16#2E7D#, 16), to_signed(16#2E74#, 16), to_signed(16#2E6B#, 16), to_signed(16#2E63#, 16),
     to_signed(16#2E5A#, 16), to_signed(16#2E51#, 16), to_signed(16#2E49#, 16), to_signed(16#2E40#, 16),
     to_signed(16#2E37#, 16), to_signed(16#2E2F#, 16), to_signed(16#2E26#, 16), to_signed(16#2E1D#, 16),
     to_signed(16#2E15#, 16), to_signed(16#2E0C#, 16), to_signed(16#2E03#, 16), to_signed(16#2DFA#, 16),
     to_signed(16#2DF2#, 16), to_signed(16#2DE9#, 16), to_signed(16#2DE0#, 16), to_signed(16#2DD7#, 16),
     to_signed(16#2DCF#, 16), to_signed(16#2DC6#, 16), to_signed(16#2DBD#, 16), to_signed(16#2DB4#, 16),
     to_signed(16#2DAB#, 16), to_signed(16#2DA3#, 16), to_signed(16#2D9A#, 16), to_signed(16#2D91#, 16),
     to_signed(16#2D88#, 16), to_signed(16#2D7F#, 16), to_signed(16#2D76#, 16), to_signed(16#2D6E#, 16),
     to_signed(16#2D65#, 16), to_signed(16#2D5C#, 16), to_signed(16#2D53#, 16), to_signed(16#2D4A#, 16));  -- sfix16 [1024]
  CONSTANT Twiddle_im_table_data          : vector_of_signed16(0 TO 1023) := 
    (to_signed(16#0000#, 16), to_signed(-16#000D#, 16), to_signed(-16#0019#, 16), to_signed(-16#0026#, 16),
     to_signed(-16#0032#, 16), to_signed(-16#003F#, 16), to_signed(-16#004B#, 16), to_signed(-16#0058#, 16),
     to_signed(-16#0065#, 16), to_signed(-16#0071#, 16), to_signed(-16#007E#, 16), to_signed(-16#008A#, 16),
     to_signed(-16#0097#, 16), to_signed(-16#00A3#, 16), to_signed(-16#00B0#, 16), to_signed(-16#00BC#, 16),
     to_signed(-16#00C9#, 16), to_signed(-16#00D6#, 16), to_signed(-16#00E2#, 16), to_signed(-16#00EF#, 16),
     to_signed(-16#00FB#, 16), to_signed(-16#0108#, 16), to_signed(-16#0114#, 16), to_signed(-16#0121#, 16),
     to_signed(-16#012E#, 16), to_signed(-16#013A#, 16), to_signed(-16#0147#, 16), to_signed(-16#0153#, 16),
     to_signed(-16#0160#, 16), to_signed(-16#016C#, 16), to_signed(-16#0179#, 16), to_signed(-16#0186#, 16),
     to_signed(-16#0192#, 16), to_signed(-16#019F#, 16), to_signed(-16#01AB#, 16), to_signed(-16#01B8#, 16),
     to_signed(-16#01C4#, 16), to_signed(-16#01D1#, 16), to_signed(-16#01DD#, 16), to_signed(-16#01EA#, 16),
     to_signed(-16#01F7#, 16), to_signed(-16#0203#, 16), to_signed(-16#0210#, 16), to_signed(-16#021C#, 16),
     to_signed(-16#0229#, 16), to_signed(-16#0235#, 16), to_signed(-16#0242#, 16), to_signed(-16#024E#, 16),
     to_signed(-16#025B#, 16), to_signed(-16#0268#, 16), to_signed(-16#0274#, 16), to_signed(-16#0281#, 16),
     to_signed(-16#028D#, 16), to_signed(-16#029A#, 16), to_signed(-16#02A6#, 16), to_signed(-16#02B3#, 16),
     to_signed(-16#02C0#, 16), to_signed(-16#02CC#, 16), to_signed(-16#02D9#, 16), to_signed(-16#02E5#, 16),
     to_signed(-16#02F2#, 16), to_signed(-16#02FE#, 16), to_signed(-16#030B#, 16), to_signed(-16#0317#, 16),
     to_signed(-16#0324#, 16), to_signed(-16#0330#, 16), to_signed(-16#033D#, 16), to_signed(-16#034A#, 16),
     to_signed(-16#0356#, 16), to_signed(-16#0363#, 16), to_signed(-16#036F#, 16), to_signed(-16#037C#, 16),
     to_signed(-16#0388#, 16), to_signed(-16#0395#, 16), to_signed(-16#03A1#, 16), to_signed(-16#03AE#, 16),
     to_signed(-16#03BB#, 16), to_signed(-16#03C7#, 16), to_signed(-16#03D4#, 16), to_signed(-16#03E0#, 16),
     to_signed(-16#03ED#, 16), to_signed(-16#03F9#, 16), to_signed(-16#0406#, 16), to_signed(-16#0412#, 16),
     to_signed(-16#041F#, 16), to_signed(-16#042B#, 16), to_signed(-16#0438#, 16), to_signed(-16#0444#, 16),
     to_signed(-16#0451#, 16), to_signed(-16#045E#, 16), to_signed(-16#046A#, 16), to_signed(-16#0477#, 16),
     to_signed(-16#0483#, 16), to_signed(-16#0490#, 16), to_signed(-16#049C#, 16), to_signed(-16#04A9#, 16),
     to_signed(-16#04B5#, 16), to_signed(-16#04C2#, 16), to_signed(-16#04CE#, 16), to_signed(-16#04DB#, 16),
     to_signed(-16#04E7#, 16), to_signed(-16#04F4#, 16), to_signed(-16#0500#, 16), to_signed(-16#050D#, 16),
     to_signed(-16#051A#, 16), to_signed(-16#0526#, 16), to_signed(-16#0533#, 16), to_signed(-16#053F#, 16),
     to_signed(-16#054C#, 16), to_signed(-16#0558#, 16), to_signed(-16#0565#, 16), to_signed(-16#0571#, 16),
     to_signed(-16#057E#, 16), to_signed(-16#058A#, 16), to_signed(-16#0597#, 16), to_signed(-16#05A3#, 16),
     to_signed(-16#05B0#, 16), to_signed(-16#05BC#, 16), to_signed(-16#05C9#, 16), to_signed(-16#05D5#, 16),
     to_signed(-16#05E2#, 16), to_signed(-16#05EE#, 16), to_signed(-16#05FB#, 16), to_signed(-16#0607#, 16),
     to_signed(-16#0614#, 16), to_signed(-16#0620#, 16), to_signed(-16#062D#, 16), to_signed(-16#0639#, 16),
     to_signed(-16#0646#, 16), to_signed(-16#0652#, 16), to_signed(-16#065F#, 16), to_signed(-16#066B#, 16),
     to_signed(-16#0678#, 16), to_signed(-16#0684#, 16), to_signed(-16#0691#, 16), to_signed(-16#069D#, 16),
     to_signed(-16#06AA#, 16), to_signed(-16#06B6#, 16), to_signed(-16#06C3#, 16), to_signed(-16#06CF#, 16),
     to_signed(-16#06DC#, 16), to_signed(-16#06E8#, 16), to_signed(-16#06F5#, 16), to_signed(-16#0701#, 16),
     to_signed(-16#070E#, 16), to_signed(-16#071A#, 16), to_signed(-16#0727#, 16), to_signed(-16#0733#, 16),
     to_signed(-16#0740#, 16), to_signed(-16#074C#, 16), to_signed(-16#0759#, 16), to_signed(-16#0765#, 16),
     to_signed(-16#0772#, 16), to_signed(-16#077E#, 16), to_signed(-16#078B#, 16), to_signed(-16#0797#, 16),
     to_signed(-16#07A4#, 16), to_signed(-16#07B0#, 16), to_signed(-16#07BD#, 16), to_signed(-16#07C9#, 16),
     to_signed(-16#07D6#, 16), to_signed(-16#07E2#, 16), to_signed(-16#07EF#, 16), to_signed(-16#07FB#, 16),
     to_signed(-16#0807#, 16), to_signed(-16#0814#, 16), to_signed(-16#0820#, 16), to_signed(-16#082D#, 16),
     to_signed(-16#0839#, 16), to_signed(-16#0846#, 16), to_signed(-16#0852#, 16), to_signed(-16#085F#, 16),
     to_signed(-16#086B#, 16), to_signed(-16#0878#, 16), to_signed(-16#0884#, 16), to_signed(-16#0891#, 16),
     to_signed(-16#089D#, 16), to_signed(-16#08A9#, 16), to_signed(-16#08B6#, 16), to_signed(-16#08C2#, 16),
     to_signed(-16#08CF#, 16), to_signed(-16#08DB#, 16), to_signed(-16#08E8#, 16), to_signed(-16#08F4#, 16),
     to_signed(-16#0901#, 16), to_signed(-16#090D#, 16), to_signed(-16#0919#, 16), to_signed(-16#0926#, 16),
     to_signed(-16#0932#, 16), to_signed(-16#093F#, 16), to_signed(-16#094B#, 16), to_signed(-16#0958#, 16),
     to_signed(-16#0964#, 16), to_signed(-16#0970#, 16), to_signed(-16#097D#, 16), to_signed(-16#0989#, 16),
     to_signed(-16#0996#, 16), to_signed(-16#09A2#, 16), to_signed(-16#09AF#, 16), to_signed(-16#09BB#, 16),
     to_signed(-16#09C7#, 16), to_signed(-16#09D4#, 16), to_signed(-16#09E0#, 16), to_signed(-16#09ED#, 16),
     to_signed(-16#09F9#, 16), to_signed(-16#0A06#, 16), to_signed(-16#0A12#, 16), to_signed(-16#0A1E#, 16),
     to_signed(-16#0A2B#, 16), to_signed(-16#0A37#, 16), to_signed(-16#0A44#, 16), to_signed(-16#0A50#, 16),
     to_signed(-16#0A5C#, 16), to_signed(-16#0A69#, 16), to_signed(-16#0A75#, 16), to_signed(-16#0A82#, 16),
     to_signed(-16#0A8E#, 16), to_signed(-16#0A9A#, 16), to_signed(-16#0AA7#, 16), to_signed(-16#0AB3#, 16),
     to_signed(-16#0AC0#, 16), to_signed(-16#0ACC#, 16), to_signed(-16#0AD8#, 16), to_signed(-16#0AE5#, 16),
     to_signed(-16#0AF1#, 16), to_signed(-16#0AFD#, 16), to_signed(-16#0B0A#, 16), to_signed(-16#0B16#, 16),
     to_signed(-16#0B23#, 16), to_signed(-16#0B2F#, 16), to_signed(-16#0B3B#, 16), to_signed(-16#0B48#, 16),
     to_signed(-16#0B54#, 16), to_signed(-16#0B60#, 16), to_signed(-16#0B6D#, 16), to_signed(-16#0B79#, 16),
     to_signed(-16#0B85#, 16), to_signed(-16#0B92#, 16), to_signed(-16#0B9E#, 16), to_signed(-16#0BAB#, 16),
     to_signed(-16#0BB7#, 16), to_signed(-16#0BC3#, 16), to_signed(-16#0BD0#, 16), to_signed(-16#0BDC#, 16),
     to_signed(-16#0BE8#, 16), to_signed(-16#0BF5#, 16), to_signed(-16#0C01#, 16), to_signed(-16#0C0D#, 16),
     to_signed(-16#0C1A#, 16), to_signed(-16#0C26#, 16), to_signed(-16#0C32#, 16), to_signed(-16#0C3F#, 16),
     to_signed(-16#0C4B#, 16), to_signed(-16#0C57#, 16), to_signed(-16#0C64#, 16), to_signed(-16#0C70#, 16),
     to_signed(-16#0C7C#, 16), to_signed(-16#0C89#, 16), to_signed(-16#0C95#, 16), to_signed(-16#0CA1#, 16),
     to_signed(-16#0CAE#, 16), to_signed(-16#0CBA#, 16), to_signed(-16#0CC6#, 16), to_signed(-16#0CD3#, 16),
     to_signed(-16#0CDF#, 16), to_signed(-16#0CEB#, 16), to_signed(-16#0CF8#, 16), to_signed(-16#0D04#, 16),
     to_signed(-16#0D10#, 16), to_signed(-16#0D1C#, 16), to_signed(-16#0D29#, 16), to_signed(-16#0D35#, 16),
     to_signed(-16#0D41#, 16), to_signed(-16#0D4E#, 16), to_signed(-16#0D5A#, 16), to_signed(-16#0D66#, 16),
     to_signed(-16#0D72#, 16), to_signed(-16#0D7F#, 16), to_signed(-16#0D8B#, 16), to_signed(-16#0D97#, 16),
     to_signed(-16#0DA4#, 16), to_signed(-16#0DB0#, 16), to_signed(-16#0DBC#, 16), to_signed(-16#0DC8#, 16),
     to_signed(-16#0DD5#, 16), to_signed(-16#0DE1#, 16), to_signed(-16#0DED#, 16), to_signed(-16#0DF9#, 16),
     to_signed(-16#0E06#, 16), to_signed(-16#0E12#, 16), to_signed(-16#0E1E#, 16), to_signed(-16#0E2B#, 16),
     to_signed(-16#0E37#, 16), to_signed(-16#0E43#, 16), to_signed(-16#0E4F#, 16), to_signed(-16#0E5C#, 16),
     to_signed(-16#0E68#, 16), to_signed(-16#0E74#, 16), to_signed(-16#0E80#, 16), to_signed(-16#0E8C#, 16),
     to_signed(-16#0E99#, 16), to_signed(-16#0EA5#, 16), to_signed(-16#0EB1#, 16), to_signed(-16#0EBD#, 16),
     to_signed(-16#0ECA#, 16), to_signed(-16#0ED6#, 16), to_signed(-16#0EE2#, 16), to_signed(-16#0EEE#, 16),
     to_signed(-16#0EFB#, 16), to_signed(-16#0F07#, 16), to_signed(-16#0F13#, 16), to_signed(-16#0F1F#, 16),
     to_signed(-16#0F2B#, 16), to_signed(-16#0F38#, 16), to_signed(-16#0F44#, 16), to_signed(-16#0F50#, 16),
     to_signed(-16#0F5C#, 16), to_signed(-16#0F68#, 16), to_signed(-16#0F75#, 16), to_signed(-16#0F81#, 16),
     to_signed(-16#0F8D#, 16), to_signed(-16#0F99#, 16), to_signed(-16#0FA5#, 16), to_signed(-16#0FB2#, 16),
     to_signed(-16#0FBE#, 16), to_signed(-16#0FCA#, 16), to_signed(-16#0FD6#, 16), to_signed(-16#0FE2#, 16),
     to_signed(-16#0FEE#, 16), to_signed(-16#0FFB#, 16), to_signed(-16#1007#, 16), to_signed(-16#1013#, 16),
     to_signed(-16#101F#, 16), to_signed(-16#102B#, 16), to_signed(-16#1037#, 16), to_signed(-16#1044#, 16),
     to_signed(-16#1050#, 16), to_signed(-16#105C#, 16), to_signed(-16#1068#, 16), to_signed(-16#1074#, 16),
     to_signed(-16#1080#, 16), to_signed(-16#108C#, 16), to_signed(-16#1099#, 16), to_signed(-16#10A5#, 16),
     to_signed(-16#10B1#, 16), to_signed(-16#10BD#, 16), to_signed(-16#10C9#, 16), to_signed(-16#10D5#, 16),
     to_signed(-16#10E1#, 16), to_signed(-16#10ED#, 16), to_signed(-16#10FA#, 16), to_signed(-16#1106#, 16),
     to_signed(-16#1112#, 16), to_signed(-16#111E#, 16), to_signed(-16#112A#, 16), to_signed(-16#1136#, 16),
     to_signed(-16#1142#, 16), to_signed(-16#114E#, 16), to_signed(-16#115A#, 16), to_signed(-16#1167#, 16),
     to_signed(-16#1173#, 16), to_signed(-16#117F#, 16), to_signed(-16#118B#, 16), to_signed(-16#1197#, 16),
     to_signed(-16#11A3#, 16), to_signed(-16#11AF#, 16), to_signed(-16#11BB#, 16), to_signed(-16#11C7#, 16),
     to_signed(-16#11D3#, 16), to_signed(-16#11DF#, 16), to_signed(-16#11EB#, 16), to_signed(-16#11F7#, 16),
     to_signed(-16#1204#, 16), to_signed(-16#1210#, 16), to_signed(-16#121C#, 16), to_signed(-16#1228#, 16),
     to_signed(-16#1234#, 16), to_signed(-16#1240#, 16), to_signed(-16#124C#, 16), to_signed(-16#1258#, 16),
     to_signed(-16#1264#, 16), to_signed(-16#1270#, 16), to_signed(-16#127C#, 16), to_signed(-16#1288#, 16),
     to_signed(-16#1294#, 16), to_signed(-16#12A0#, 16), to_signed(-16#12AC#, 16), to_signed(-16#12B8#, 16),
     to_signed(-16#12C4#, 16), to_signed(-16#12D0#, 16), to_signed(-16#12DC#, 16), to_signed(-16#12E8#, 16),
     to_signed(-16#12F4#, 16), to_signed(-16#1300#, 16), to_signed(-16#130C#, 16), to_signed(-16#1318#, 16),
     to_signed(-16#1324#, 16), to_signed(-16#1330#, 16), to_signed(-16#133C#, 16), to_signed(-16#1348#, 16),
     to_signed(-16#1354#, 16), to_signed(-16#1360#, 16), to_signed(-16#136C#, 16), to_signed(-16#1378#, 16),
     to_signed(-16#1384#, 16), to_signed(-16#1390#, 16), to_signed(-16#139C#, 16), to_signed(-16#13A8#, 16),
     to_signed(-16#13B4#, 16), to_signed(-16#13C0#, 16), to_signed(-16#13CC#, 16), to_signed(-16#13D8#, 16),
     to_signed(-16#13E4#, 16), to_signed(-16#13F0#, 16), to_signed(-16#13FB#, 16), to_signed(-16#1407#, 16),
     to_signed(-16#1413#, 16), to_signed(-16#141F#, 16), to_signed(-16#142B#, 16), to_signed(-16#1437#, 16),
     to_signed(-16#1443#, 16), to_signed(-16#144F#, 16), to_signed(-16#145B#, 16), to_signed(-16#1467#, 16),
     to_signed(-16#1473#, 16), to_signed(-16#147F#, 16), to_signed(-16#148B#, 16), to_signed(-16#1496#, 16),
     to_signed(-16#14A2#, 16), to_signed(-16#14AE#, 16), to_signed(-16#14BA#, 16), to_signed(-16#14C6#, 16),
     to_signed(-16#14D2#, 16), to_signed(-16#14DE#, 16), to_signed(-16#14EA#, 16), to_signed(-16#14F6#, 16),
     to_signed(-16#1501#, 16), to_signed(-16#150D#, 16), to_signed(-16#1519#, 16), to_signed(-16#1525#, 16),
     to_signed(-16#1531#, 16), to_signed(-16#153D#, 16), to_signed(-16#1549#, 16), to_signed(-16#1554#, 16),
     to_signed(-16#1560#, 16), to_signed(-16#156C#, 16), to_signed(-16#1578#, 16), to_signed(-16#1584#, 16),
     to_signed(-16#1590#, 16), to_signed(-16#159B#, 16), to_signed(-16#15A7#, 16), to_signed(-16#15B3#, 16),
     to_signed(-16#15BF#, 16), to_signed(-16#15CB#, 16), to_signed(-16#15D7#, 16), to_signed(-16#15E2#, 16),
     to_signed(-16#15EE#, 16), to_signed(-16#15FA#, 16), to_signed(-16#1606#, 16), to_signed(-16#1612#, 16),
     to_signed(-16#161D#, 16), to_signed(-16#1629#, 16), to_signed(-16#1635#, 16), to_signed(-16#1641#, 16),
     to_signed(-16#164C#, 16), to_signed(-16#1658#, 16), to_signed(-16#1664#, 16), to_signed(-16#1670#, 16),
     to_signed(-16#167C#, 16), to_signed(-16#1687#, 16), to_signed(-16#1693#, 16), to_signed(-16#169F#, 16),
     to_signed(-16#16AB#, 16), to_signed(-16#16B6#, 16), to_signed(-16#16C2#, 16), to_signed(-16#16CE#, 16),
     to_signed(-16#16DA#, 16), to_signed(-16#16E5#, 16), to_signed(-16#16F1#, 16), to_signed(-16#16FD#, 16),
     to_signed(-16#1709#, 16), to_signed(-16#1714#, 16), to_signed(-16#1720#, 16), to_signed(-16#172C#, 16),
     to_signed(-16#1737#, 16), to_signed(-16#1743#, 16), to_signed(-16#174F#, 16), to_signed(-16#175B#, 16),
     to_signed(-16#1766#, 16), to_signed(-16#1772#, 16), to_signed(-16#177E#, 16), to_signed(-16#1789#, 16),
     to_signed(-16#1795#, 16), to_signed(-16#17A1#, 16), to_signed(-16#17AC#, 16), to_signed(-16#17B8#, 16),
     to_signed(-16#17C4#, 16), to_signed(-16#17CF#, 16), to_signed(-16#17DB#, 16), to_signed(-16#17E7#, 16),
     to_signed(-16#17F2#, 16), to_signed(-16#17FE#, 16), to_signed(-16#180A#, 16), to_signed(-16#1815#, 16),
     to_signed(-16#1821#, 16), to_signed(-16#182D#, 16), to_signed(-16#1838#, 16), to_signed(-16#1844#, 16),
     to_signed(-16#184F#, 16), to_signed(-16#185B#, 16), to_signed(-16#1867#, 16), to_signed(-16#1872#, 16),
     to_signed(-16#187E#, 16), to_signed(-16#1889#, 16), to_signed(-16#1895#, 16), to_signed(-16#18A1#, 16),
     to_signed(-16#18AC#, 16), to_signed(-16#18B8#, 16), to_signed(-16#18C3#, 16), to_signed(-16#18CF#, 16),
     to_signed(-16#18DB#, 16), to_signed(-16#18E6#, 16), to_signed(-16#18F2#, 16), to_signed(-16#18FD#, 16),
     to_signed(-16#1909#, 16), to_signed(-16#1914#, 16), to_signed(-16#1920#, 16), to_signed(-16#192C#, 16),
     to_signed(-16#1937#, 16), to_signed(-16#1943#, 16), to_signed(-16#194E#, 16), to_signed(-16#195A#, 16),
     to_signed(-16#1965#, 16), to_signed(-16#1971#, 16), to_signed(-16#197C#, 16), to_signed(-16#1988#, 16),
     to_signed(-16#1993#, 16), to_signed(-16#199F#, 16), to_signed(-16#19AA#, 16), to_signed(-16#19B6#, 16),
     to_signed(-16#19C1#, 16), to_signed(-16#19CD#, 16), to_signed(-16#19D8#, 16), to_signed(-16#19E4#, 16),
     to_signed(-16#19EF#, 16), to_signed(-16#19FB#, 16), to_signed(-16#1A06#, 16), to_signed(-16#1A12#, 16),
     to_signed(-16#1A1D#, 16), to_signed(-16#1A29#, 16), to_signed(-16#1A34#, 16), to_signed(-16#1A40#, 16),
     to_signed(-16#1A4B#, 16), to_signed(-16#1A57#, 16), to_signed(-16#1A62#, 16), to_signed(-16#1A6E#, 16),
     to_signed(-16#1A79#, 16), to_signed(-16#1A84#, 16), to_signed(-16#1A90#, 16), to_signed(-16#1A9B#, 16),
     to_signed(-16#1AA7#, 16), to_signed(-16#1AB2#, 16), to_signed(-16#1ABE#, 16), to_signed(-16#1AC9#, 16),
     to_signed(-16#1AD4#, 16), to_signed(-16#1AE0#, 16), to_signed(-16#1AEB#, 16), to_signed(-16#1AF7#, 16),
     to_signed(-16#1B02#, 16), to_signed(-16#1B0D#, 16), to_signed(-16#1B19#, 16), to_signed(-16#1B24#, 16),
     to_signed(-16#1B30#, 16), to_signed(-16#1B3B#, 16), to_signed(-16#1B46#, 16), to_signed(-16#1B52#, 16),
     to_signed(-16#1B5D#, 16), to_signed(-16#1B68#, 16), to_signed(-16#1B74#, 16), to_signed(-16#1B7F#, 16),
     to_signed(-16#1B8A#, 16), to_signed(-16#1B96#, 16), to_signed(-16#1BA1#, 16), to_signed(-16#1BAC#, 16),
     to_signed(-16#1BB8#, 16), to_signed(-16#1BC3#, 16), to_signed(-16#1BCE#, 16), to_signed(-16#1BDA#, 16),
     to_signed(-16#1BE5#, 16), to_signed(-16#1BF0#, 16), to_signed(-16#1BFC#, 16), to_signed(-16#1C07#, 16),
     to_signed(-16#1C12#, 16), to_signed(-16#1C1E#, 16), to_signed(-16#1C29#, 16), to_signed(-16#1C34#, 16),
     to_signed(-16#1C3F#, 16), to_signed(-16#1C4B#, 16), to_signed(-16#1C56#, 16), to_signed(-16#1C61#, 16),
     to_signed(-16#1C6C#, 16), to_signed(-16#1C78#, 16), to_signed(-16#1C83#, 16), to_signed(-16#1C8E#, 16),
     to_signed(-16#1C99#, 16), to_signed(-16#1CA5#, 16), to_signed(-16#1CB0#, 16), to_signed(-16#1CBB#, 16),
     to_signed(-16#1CC6#, 16), to_signed(-16#1CD2#, 16), to_signed(-16#1CDD#, 16), to_signed(-16#1CE8#, 16),
     to_signed(-16#1CF3#, 16), to_signed(-16#1CFF#, 16), to_signed(-16#1D0A#, 16), to_signed(-16#1D15#, 16),
     to_signed(-16#1D20#, 16), to_signed(-16#1D2B#, 16), to_signed(-16#1D36#, 16), to_signed(-16#1D42#, 16),
     to_signed(-16#1D4D#, 16), to_signed(-16#1D58#, 16), to_signed(-16#1D63#, 16), to_signed(-16#1D6E#, 16),
     to_signed(-16#1D79#, 16), to_signed(-16#1D85#, 16), to_signed(-16#1D90#, 16), to_signed(-16#1D9B#, 16),
     to_signed(-16#1DA6#, 16), to_signed(-16#1DB1#, 16), to_signed(-16#1DBC#, 16), to_signed(-16#1DC7#, 16),
     to_signed(-16#1DD3#, 16), to_signed(-16#1DDE#, 16), to_signed(-16#1DE9#, 16), to_signed(-16#1DF4#, 16),
     to_signed(-16#1DFF#, 16), to_signed(-16#1E0A#, 16), to_signed(-16#1E15#, 16), to_signed(-16#1E20#, 16),
     to_signed(-16#1E2B#, 16), to_signed(-16#1E36#, 16), to_signed(-16#1E42#, 16), to_signed(-16#1E4D#, 16),
     to_signed(-16#1E58#, 16), to_signed(-16#1E63#, 16), to_signed(-16#1E6E#, 16), to_signed(-16#1E79#, 16),
     to_signed(-16#1E84#, 16), to_signed(-16#1E8F#, 16), to_signed(-16#1E9A#, 16), to_signed(-16#1EA5#, 16),
     to_signed(-16#1EB0#, 16), to_signed(-16#1EBB#, 16), to_signed(-16#1EC6#, 16), to_signed(-16#1ED1#, 16),
     to_signed(-16#1EDC#, 16), to_signed(-16#1EE7#, 16), to_signed(-16#1EF2#, 16), to_signed(-16#1EFD#, 16),
     to_signed(-16#1F08#, 16), to_signed(-16#1F13#, 16), to_signed(-16#1F1E#, 16), to_signed(-16#1F29#, 16),
     to_signed(-16#1F34#, 16), to_signed(-16#1F3F#, 16), to_signed(-16#1F4A#, 16), to_signed(-16#1F55#, 16),
     to_signed(-16#1F60#, 16), to_signed(-16#1F6B#, 16), to_signed(-16#1F76#, 16), to_signed(-16#1F81#, 16),
     to_signed(-16#1F8C#, 16), to_signed(-16#1F97#, 16), to_signed(-16#1FA2#, 16), to_signed(-16#1FAC#, 16),
     to_signed(-16#1FB7#, 16), to_signed(-16#1FC2#, 16), to_signed(-16#1FCD#, 16), to_signed(-16#1FD8#, 16),
     to_signed(-16#1FE3#, 16), to_signed(-16#1FEE#, 16), to_signed(-16#1FF9#, 16), to_signed(-16#2004#, 16),
     to_signed(-16#200F#, 16), to_signed(-16#2019#, 16), to_signed(-16#2024#, 16), to_signed(-16#202F#, 16),
     to_signed(-16#203A#, 16), to_signed(-16#2045#, 16), to_signed(-16#2050#, 16), to_signed(-16#205B#, 16),
     to_signed(-16#2065#, 16), to_signed(-16#2070#, 16), to_signed(-16#207B#, 16), to_signed(-16#2086#, 16),
     to_signed(-16#2091#, 16), to_signed(-16#209B#, 16), to_signed(-16#20A6#, 16), to_signed(-16#20B1#, 16),
     to_signed(-16#20BC#, 16), to_signed(-16#20C7#, 16), to_signed(-16#20D1#, 16), to_signed(-16#20DC#, 16),
     to_signed(-16#20E7#, 16), to_signed(-16#20F2#, 16), to_signed(-16#20FD#, 16), to_signed(-16#2107#, 16),
     to_signed(-16#2112#, 16), to_signed(-16#211D#, 16), to_signed(-16#2128#, 16), to_signed(-16#2132#, 16),
     to_signed(-16#213D#, 16), to_signed(-16#2148#, 16), to_signed(-16#2153#, 16), to_signed(-16#215D#, 16),
     to_signed(-16#2168#, 16), to_signed(-16#2173#, 16), to_signed(-16#217D#, 16), to_signed(-16#2188#, 16),
     to_signed(-16#2193#, 16), to_signed(-16#219E#, 16), to_signed(-16#21A8#, 16), to_signed(-16#21B3#, 16),
     to_signed(-16#21BE#, 16), to_signed(-16#21C8#, 16), to_signed(-16#21D3#, 16), to_signed(-16#21DE#, 16),
     to_signed(-16#21E8#, 16), to_signed(-16#21F3#, 16), to_signed(-16#21FE#, 16), to_signed(-16#2208#, 16),
     to_signed(-16#2213#, 16), to_signed(-16#221E#, 16), to_signed(-16#2228#, 16), to_signed(-16#2233#, 16),
     to_signed(-16#223D#, 16), to_signed(-16#2248#, 16), to_signed(-16#2253#, 16), to_signed(-16#225D#, 16),
     to_signed(-16#2268#, 16), to_signed(-16#2272#, 16), to_signed(-16#227D#, 16), to_signed(-16#2288#, 16),
     to_signed(-16#2292#, 16), to_signed(-16#229D#, 16), to_signed(-16#22A7#, 16), to_signed(-16#22B2#, 16),
     to_signed(-16#22BC#, 16), to_signed(-16#22C7#, 16), to_signed(-16#22D2#, 16), to_signed(-16#22DC#, 16),
     to_signed(-16#22E7#, 16), to_signed(-16#22F1#, 16), to_signed(-16#22FC#, 16), to_signed(-16#2306#, 16),
     to_signed(-16#2311#, 16), to_signed(-16#231B#, 16), to_signed(-16#2326#, 16), to_signed(-16#2330#, 16),
     to_signed(-16#233B#, 16), to_signed(-16#2345#, 16), to_signed(-16#2350#, 16), to_signed(-16#235A#, 16),
     to_signed(-16#2365#, 16), to_signed(-16#236F#, 16), to_signed(-16#237A#, 16), to_signed(-16#2384#, 16),
     to_signed(-16#238E#, 16), to_signed(-16#2399#, 16), to_signed(-16#23A3#, 16), to_signed(-16#23AE#, 16),
     to_signed(-16#23B8#, 16), to_signed(-16#23C3#, 16), to_signed(-16#23CD#, 16), to_signed(-16#23D7#, 16),
     to_signed(-16#23E2#, 16), to_signed(-16#23EC#, 16), to_signed(-16#23F7#, 16), to_signed(-16#2401#, 16),
     to_signed(-16#240B#, 16), to_signed(-16#2416#, 16), to_signed(-16#2420#, 16), to_signed(-16#242B#, 16),
     to_signed(-16#2435#, 16), to_signed(-16#243F#, 16), to_signed(-16#244A#, 16), to_signed(-16#2454#, 16),
     to_signed(-16#245E#, 16), to_signed(-16#2469#, 16), to_signed(-16#2473#, 16), to_signed(-16#247D#, 16),
     to_signed(-16#2488#, 16), to_signed(-16#2492#, 16), to_signed(-16#249C#, 16), to_signed(-16#24A7#, 16),
     to_signed(-16#24B1#, 16), to_signed(-16#24BB#, 16), to_signed(-16#24C5#, 16), to_signed(-16#24D0#, 16),
     to_signed(-16#24DA#, 16), to_signed(-16#24E4#, 16), to_signed(-16#24EF#, 16), to_signed(-16#24F9#, 16),
     to_signed(-16#2503#, 16), to_signed(-16#250D#, 16), to_signed(-16#2518#, 16), to_signed(-16#2522#, 16),
     to_signed(-16#252C#, 16), to_signed(-16#2536#, 16), to_signed(-16#2541#, 16), to_signed(-16#254B#, 16),
     to_signed(-16#2555#, 16), to_signed(-16#255F#, 16), to_signed(-16#2569#, 16), to_signed(-16#2574#, 16),
     to_signed(-16#257E#, 16), to_signed(-16#2588#, 16), to_signed(-16#2592#, 16), to_signed(-16#259C#, 16),
     to_signed(-16#25A6#, 16), to_signed(-16#25B1#, 16), to_signed(-16#25BB#, 16), to_signed(-16#25C5#, 16),
     to_signed(-16#25CF#, 16), to_signed(-16#25D9#, 16), to_signed(-16#25E3#, 16), to_signed(-16#25ED#, 16),
     to_signed(-16#25F8#, 16), to_signed(-16#2602#, 16), to_signed(-16#260C#, 16), to_signed(-16#2616#, 16),
     to_signed(-16#2620#, 16), to_signed(-16#262A#, 16), to_signed(-16#2634#, 16), to_signed(-16#263E#, 16),
     to_signed(-16#2648#, 16), to_signed(-16#2652#, 16), to_signed(-16#265C#, 16), to_signed(-16#2666#, 16),
     to_signed(-16#2671#, 16), to_signed(-16#267B#, 16), to_signed(-16#2685#, 16), to_signed(-16#268F#, 16),
     to_signed(-16#2699#, 16), to_signed(-16#26A3#, 16), to_signed(-16#26AD#, 16), to_signed(-16#26B7#, 16),
     to_signed(-16#26C1#, 16), to_signed(-16#26CB#, 16), to_signed(-16#26D5#, 16), to_signed(-16#26DF#, 16),
     to_signed(-16#26E9#, 16), to_signed(-16#26F3#, 16), to_signed(-16#26FD#, 16), to_signed(-16#2707#, 16),
     to_signed(-16#2711#, 16), to_signed(-16#271A#, 16), to_signed(-16#2724#, 16), to_signed(-16#272E#, 16),
     to_signed(-16#2738#, 16), to_signed(-16#2742#, 16), to_signed(-16#274C#, 16), to_signed(-16#2756#, 16),
     to_signed(-16#2760#, 16), to_signed(-16#276A#, 16), to_signed(-16#2774#, 16), to_signed(-16#277E#, 16),
     to_signed(-16#2788#, 16), to_signed(-16#2791#, 16), to_signed(-16#279B#, 16), to_signed(-16#27A5#, 16),
     to_signed(-16#27AF#, 16), to_signed(-16#27B9#, 16), to_signed(-16#27C3#, 16), to_signed(-16#27CD#, 16),
     to_signed(-16#27D6#, 16), to_signed(-16#27E0#, 16), to_signed(-16#27EA#, 16), to_signed(-16#27F4#, 16),
     to_signed(-16#27FE#, 16), to_signed(-16#2808#, 16), to_signed(-16#2811#, 16), to_signed(-16#281B#, 16),
     to_signed(-16#2825#, 16), to_signed(-16#282F#, 16), to_signed(-16#2838#, 16), to_signed(-16#2842#, 16),
     to_signed(-16#284C#, 16), to_signed(-16#2856#, 16), to_signed(-16#2860#, 16), to_signed(-16#2869#, 16),
     to_signed(-16#2873#, 16), to_signed(-16#287D#, 16), to_signed(-16#2886#, 16), to_signed(-16#2890#, 16),
     to_signed(-16#289A#, 16), to_signed(-16#28A4#, 16), to_signed(-16#28AD#, 16), to_signed(-16#28B7#, 16),
     to_signed(-16#28C1#, 16), to_signed(-16#28CA#, 16), to_signed(-16#28D4#, 16), to_signed(-16#28DE#, 16),
     to_signed(-16#28E7#, 16), to_signed(-16#28F1#, 16), to_signed(-16#28FB#, 16), to_signed(-16#2904#, 16),
     to_signed(-16#290E#, 16), to_signed(-16#2918#, 16), to_signed(-16#2921#, 16), to_signed(-16#292B#, 16),
     to_signed(-16#2935#, 16), to_signed(-16#293E#, 16), to_signed(-16#2948#, 16), to_signed(-16#2951#, 16),
     to_signed(-16#295B#, 16), to_signed(-16#2965#, 16), to_signed(-16#296E#, 16), to_signed(-16#2978#, 16),
     to_signed(-16#2981#, 16), to_signed(-16#298B#, 16), to_signed(-16#2994#, 16), to_signed(-16#299E#, 16),
     to_signed(-16#29A7#, 16), to_signed(-16#29B1#, 16), to_signed(-16#29BB#, 16), to_signed(-16#29C4#, 16),
     to_signed(-16#29CE#, 16), to_signed(-16#29D7#, 16), to_signed(-16#29E1#, 16), to_signed(-16#29EA#, 16),
     to_signed(-16#29F4#, 16), to_signed(-16#29FD#, 16), to_signed(-16#2A07#, 16), to_signed(-16#2A10#, 16),
     to_signed(-16#2A1A#, 16), to_signed(-16#2A23#, 16), to_signed(-16#2A2C#, 16), to_signed(-16#2A36#, 16),
     to_signed(-16#2A3F#, 16), to_signed(-16#2A49#, 16), to_signed(-16#2A52#, 16), to_signed(-16#2A5C#, 16),
     to_signed(-16#2A65#, 16), to_signed(-16#2A6E#, 16), to_signed(-16#2A78#, 16), to_signed(-16#2A81#, 16),
     to_signed(-16#2A8B#, 16), to_signed(-16#2A94#, 16), to_signed(-16#2A9D#, 16), to_signed(-16#2AA7#, 16),
     to_signed(-16#2AB0#, 16), to_signed(-16#2AB9#, 16), to_signed(-16#2AC3#, 16), to_signed(-16#2ACC#, 16),
     to_signed(-16#2AD6#, 16), to_signed(-16#2ADF#, 16), to_signed(-16#2AE8#, 16), to_signed(-16#2AF2#, 16),
     to_signed(-16#2AFB#, 16), to_signed(-16#2B04#, 16), to_signed(-16#2B0D#, 16), to_signed(-16#2B17#, 16),
     to_signed(-16#2B20#, 16), to_signed(-16#2B29#, 16), to_signed(-16#2B33#, 16), to_signed(-16#2B3C#, 16),
     to_signed(-16#2B45#, 16), to_signed(-16#2B4E#, 16), to_signed(-16#2B58#, 16), to_signed(-16#2B61#, 16),
     to_signed(-16#2B6A#, 16), to_signed(-16#2B73#, 16), to_signed(-16#2B7D#, 16), to_signed(-16#2B86#, 16),
     to_signed(-16#2B8F#, 16), to_signed(-16#2B98#, 16), to_signed(-16#2BA1#, 16), to_signed(-16#2BAB#, 16),
     to_signed(-16#2BB4#, 16), to_signed(-16#2BBD#, 16), to_signed(-16#2BC6#, 16), to_signed(-16#2BCF#, 16),
     to_signed(-16#2BD8#, 16), to_signed(-16#2BE2#, 16), to_signed(-16#2BEB#, 16), to_signed(-16#2BF4#, 16),
     to_signed(-16#2BFD#, 16), to_signed(-16#2C06#, 16), to_signed(-16#2C0F#, 16), to_signed(-16#2C18#, 16),
     to_signed(-16#2C21#, 16), to_signed(-16#2C2B#, 16), to_signed(-16#2C34#, 16), to_signed(-16#2C3D#, 16),
     to_signed(-16#2C46#, 16), to_signed(-16#2C4F#, 16), to_signed(-16#2C58#, 16), to_signed(-16#2C61#, 16),
     to_signed(-16#2C6A#, 16), to_signed(-16#2C73#, 16), to_signed(-16#2C7C#, 16), to_signed(-16#2C85#, 16),
     to_signed(-16#2C8E#, 16), to_signed(-16#2C97#, 16), to_signed(-16#2CA0#, 16), to_signed(-16#2CA9#, 16),
     to_signed(-16#2CB2#, 16), to_signed(-16#2CBB#, 16), to_signed(-16#2CC4#, 16), to_signed(-16#2CCD#, 16),
     to_signed(-16#2CD6#, 16), to_signed(-16#2CDF#, 16), to_signed(-16#2CE8#, 16), to_signed(-16#2CF1#, 16),
     to_signed(-16#2CFA#, 16), to_signed(-16#2D03#, 16), to_signed(-16#2D0C#, 16), to_signed(-16#2D15#, 16),
     to_signed(-16#2D1E#, 16), to_signed(-16#2D27#, 16), to_signed(-16#2D2F#, 16), to_signed(-16#2D38#, 16));  -- sfix16 [1024]

  -- Functions
  -- HDLCODER_TO_STDLOGIC 
  FUNCTION hdlcoder_to_stdlogic(arg: boolean) RETURN std_logic IS
  BEGIN
    IF arg THEN
      RETURN '1';
    ELSE
      RETURN '0';
    END IF;
  END FUNCTION;


  -- Signals
  SIGNAL Radix22TwdlMapping_cnt           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Radix22TwdlMapping_phase         : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Radix22TwdlMapping_octantReg1    : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Radix22TwdlMapping_twdlAddr_raw  : unsigned(12 DOWNTO 0);  -- ufix13
  SIGNAL Radix22TwdlMapping_twdlAddrMap   : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Radix22TwdlMapping_twdl45Reg     : std_logic;
  SIGNAL Radix22TwdlMapping_dvldReg1      : std_logic;
  SIGNAL Radix22TwdlMapping_dvldReg2      : std_logic;
  SIGNAL Radix22TwdlMapping_cnt_next      : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Radix22TwdlMapping_phase_next    : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Radix22TwdlMapping_octantReg1_next : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Radix22TwdlMapping_twdlAddr_raw_next : unsigned(12 DOWNTO 0);  -- ufix13
  SIGNAL Radix22TwdlMapping_twdlAddrMap_next : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Radix22TwdlMapping_twdl45Reg_next : std_logic;
  SIGNAL Radix22TwdlMapping_dvldReg1_next : std_logic;
  SIGNAL Radix22TwdlMapping_dvldReg2_next : std_logic;
  SIGNAL twdlAddr                         : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL twdlAddrVld                      : std_logic;
  SIGNAL twdlOctant                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL twdl45                           : std_logic;
  SIGNAL twiddleS_re                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL twiddleReg_re                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL twiddleS_im                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL twiddleReg_im                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL twdlOctantReg                    : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL twdl45Reg                        : std_logic;
  SIGNAL twdl_5_1_re_tmp                  : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL twdl_5_1_im_tmp                  : signed(15 DOWNTO 0);  -- sfix16_En14

BEGIN
  -- Radix22TwdlMapping
  Radix22TwdlMapping_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Radix22TwdlMapping_octantReg1 <= to_unsigned(16#0#, 3);
      Radix22TwdlMapping_twdlAddr_raw <= to_unsigned(16#0000#, 13);
      Radix22TwdlMapping_twdlAddrMap <= to_unsigned(16#000#, 10);
      Radix22TwdlMapping_twdl45Reg <= '0';
      Radix22TwdlMapping_dvldReg1 <= '0';
      Radix22TwdlMapping_dvldReg2 <= '0';
      Radix22TwdlMapping_cnt <= to_unsigned(16#000#, 11);
      Radix22TwdlMapping_phase <= to_unsigned(16#0#, 2);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        Radix22TwdlMapping_cnt <= Radix22TwdlMapping_cnt_next;
        Radix22TwdlMapping_phase <= Radix22TwdlMapping_phase_next;
        Radix22TwdlMapping_octantReg1 <= Radix22TwdlMapping_octantReg1_next;
        Radix22TwdlMapping_twdlAddr_raw <= Radix22TwdlMapping_twdlAddr_raw_next;
        Radix22TwdlMapping_twdlAddrMap <= Radix22TwdlMapping_twdlAddrMap_next;
        Radix22TwdlMapping_twdl45Reg <= Radix22TwdlMapping_twdl45Reg_next;
        Radix22TwdlMapping_dvldReg1 <= Radix22TwdlMapping_dvldReg1_next;
        Radix22TwdlMapping_dvldReg2 <= Radix22TwdlMapping_dvldReg2_next;
      END IF;
    END IF;
  END PROCESS Radix22TwdlMapping_process;

  Radix22TwdlMapping_output : PROCESS (Radix22TwdlMapping_cnt, Radix22TwdlMapping_dvldReg1,
       Radix22TwdlMapping_dvldReg2, Radix22TwdlMapping_octantReg1,
       Radix22TwdlMapping_phase, Radix22TwdlMapping_twdl45Reg,
       Radix22TwdlMapping_twdlAddrMap, Radix22TwdlMapping_twdlAddr_raw,
       dout_4_1_vld)
    VARIABLE octant : unsigned(2 DOWNTO 0);
    VARIABLE cnt_cast : unsigned(12 DOWNTO 0);
    VARIABLE sub_cast : signed(27 DOWNTO 0);
    VARIABLE sub_temp : signed(27 DOWNTO 0);
    VARIABLE sub_cast_0 : signed(14 DOWNTO 0);
    VARIABLE sub_temp_0 : signed(14 DOWNTO 0);
    VARIABLE sub_cast_1 : signed(14 DOWNTO 0);
    VARIABLE sub_temp_1 : signed(14 DOWNTO 0);
    VARIABLE sub_cast_2 : signed(27 DOWNTO 0);
    VARIABLE sub_temp_2 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_3 : signed(27 DOWNTO 0);
    VARIABLE sub_temp_3 : signed(27 DOWNTO 0);
  BEGIN
    sub_temp := to_signed(16#0000000#, 28);
    sub_temp_0 := to_signed(16#0000#, 15);
    sub_temp_1 := to_signed(16#0000#, 15);
    sub_temp_2 := to_signed(16#0000000#, 28);
    sub_temp_3 := to_signed(16#0000000#, 28);
    cnt_cast := to_unsigned(16#0000#, 13);
    sub_cast := to_signed(16#0000000#, 28);
    sub_cast_0 := to_signed(16#0000#, 15);
    sub_cast_1 := to_signed(16#0000#, 15);
    sub_cast_2 := to_signed(16#0000000#, 28);
    sub_cast_3 := to_signed(16#0000000#, 28);
    Radix22TwdlMapping_cnt_next <= Radix22TwdlMapping_cnt;
    Radix22TwdlMapping_phase_next <= Radix22TwdlMapping_phase;
    Radix22TwdlMapping_twdlAddr_raw_next <= Radix22TwdlMapping_twdlAddr_raw;
    Radix22TwdlMapping_twdlAddrMap_next <= Radix22TwdlMapping_twdlAddrMap;
    Radix22TwdlMapping_twdl45Reg_next <= Radix22TwdlMapping_twdl45Reg;
    Radix22TwdlMapping_dvldReg2_next <= Radix22TwdlMapping_dvldReg1;
    Radix22TwdlMapping_dvldReg1_next <= dout_4_1_vld;
    CASE Radix22TwdlMapping_twdlAddr_raw IS
      WHEN "0010000000000" =>
        octant := to_unsigned(16#0#, 3);
        Radix22TwdlMapping_twdl45Reg_next <= '1';
      WHEN "0100000000000" =>
        octant := to_unsigned(16#1#, 3);
        Radix22TwdlMapping_twdl45Reg_next <= '0';
      WHEN "0110000000000" =>
        octant := to_unsigned(16#2#, 3);
        Radix22TwdlMapping_twdl45Reg_next <= '1';
      WHEN "1000000000000" =>
        octant := to_unsigned(16#3#, 3);
        Radix22TwdlMapping_twdl45Reg_next <= '0';
      WHEN "1010000000000" =>
        octant := to_unsigned(16#4#, 3);
        Radix22TwdlMapping_twdl45Reg_next <= '1';
      WHEN OTHERS => 
        octant := Radix22TwdlMapping_twdlAddr_raw(12 DOWNTO 10);
        Radix22TwdlMapping_twdl45Reg_next <= '0';
    END CASE;
    Radix22TwdlMapping_octantReg1_next <= octant;
    CASE octant IS
      WHEN "000" =>
        Radix22TwdlMapping_twdlAddrMap_next <= Radix22TwdlMapping_twdlAddr_raw(9 DOWNTO 0);
      WHEN "001" =>
        sub_cast_0 := signed(resize(Radix22TwdlMapping_twdlAddr_raw, 15));
        sub_temp_0 := to_signed(16#0800#, 15) - sub_cast_0;
        Radix22TwdlMapping_twdlAddrMap_next <= unsigned(sub_temp_0(9 DOWNTO 0));
      WHEN "010" =>
        sub_cast_1 := signed(resize(Radix22TwdlMapping_twdlAddr_raw, 15));
        sub_temp_1 := sub_cast_1 - to_signed(16#0800#, 15);
        Radix22TwdlMapping_twdlAddrMap_next <= unsigned(sub_temp_1(9 DOWNTO 0));
      WHEN "011" =>
        sub_cast_2 := signed(resize(Radix22TwdlMapping_twdlAddr_raw & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 28));
        sub_temp_2 := to_signed(16#0400000#, 28) - sub_cast_2;
        Radix22TwdlMapping_twdlAddrMap_next <= unsigned(sub_temp_2(19 DOWNTO 10));
      WHEN "100" =>
        sub_cast_3 := signed(resize(Radix22TwdlMapping_twdlAddr_raw & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 28));
        sub_temp_3 := sub_cast_3 - to_signed(16#0400000#, 28);
        Radix22TwdlMapping_twdlAddrMap_next <= unsigned(sub_temp_3(19 DOWNTO 10));
      WHEN OTHERS => 
        sub_cast := signed(resize(Radix22TwdlMapping_twdlAddr_raw & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 28));
        sub_temp := to_signed(16#0600000#, 28) - sub_cast;
        Radix22TwdlMapping_twdlAddrMap_next <= unsigned(sub_temp(19 DOWNTO 10));
    END CASE;
    IF Radix22TwdlMapping_phase = to_unsigned(16#0#, 2) THEN 
      Radix22TwdlMapping_twdlAddr_raw_next <= to_unsigned(16#0000#, 13);
    ELSIF Radix22TwdlMapping_phase = to_unsigned(16#1#, 2) THEN 
      Radix22TwdlMapping_twdlAddr_raw_next <= resize(Radix22TwdlMapping_cnt, 13) sll 1;
    ELSIF Radix22TwdlMapping_phase = to_unsigned(16#2#, 2) THEN 
      Radix22TwdlMapping_twdlAddr_raw_next <= resize(Radix22TwdlMapping_cnt, 13);
    ELSE 
      cnt_cast := resize(Radix22TwdlMapping_cnt, 13);
      Radix22TwdlMapping_twdlAddr_raw_next <= (cnt_cast sll 1) + cnt_cast;
    END IF;
    IF (dout_4_1_vld AND hdlcoder_to_stdlogic(Radix22TwdlMapping_cnt > to_unsigned(16#7FB#, 11))) = '1' THEN 
      Radix22TwdlMapping_phase_next <= Radix22TwdlMapping_phase + to_unsigned(16#1#, 2);
    END IF;
    IF dout_4_1_vld = '1' THEN 
      Radix22TwdlMapping_cnt_next <= Radix22TwdlMapping_cnt + to_unsigned(16#004#, 11);
    END IF;
    twdlAddr <= Radix22TwdlMapping_twdlAddrMap;
    twdlAddrVld <= Radix22TwdlMapping_dvldReg2;
    twdlOctant <= Radix22TwdlMapping_octantReg1;
    twdl45 <= Radix22TwdlMapping_twdl45Reg;
  END PROCESS Radix22TwdlMapping_output;


  -- Twiddle ROM1
  twiddleS_re <= Twiddle_re_table_data(to_integer(twdlAddr));

  TWIDDLEROM_RE_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      twiddleReg_re <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        twiddleReg_re <= twiddleS_re;
      END IF;
    END IF;
  END PROCESS TWIDDLEROM_RE_process;


  -- Twiddle ROM2
  twiddleS_im <= Twiddle_im_table_data(to_integer(twdlAddr));

  TWIDDLEROM_IM_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      twiddleReg_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        twiddleReg_im <= twiddleS_im;
      END IF;
    END IF;
  END PROCESS TWIDDLEROM_IM_process;


  intdelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      twdlOctantReg <= to_unsigned(16#0#, 3);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        twdlOctantReg <= twdlOctant;
      END IF;
    END IF;
  END PROCESS intdelay_process;


  intdelay_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      twdl45Reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        twdl45Reg <= twdl45;
      END IF;
    END IF;
  END PROCESS intdelay_1_process;


  -- Radix22TwdlOctCorr
  Radix22TwdlOctCorr_output : PROCESS (twdl45Reg, twdlOctantReg, twiddleReg_im, twiddleReg_re)
    VARIABLE twdlIn_re : signed(15 DOWNTO 0);
    VARIABLE twdlIn_im : signed(15 DOWNTO 0);
    VARIABLE cast : signed(16 DOWNTO 0);
    VARIABLE cast_0 : signed(16 DOWNTO 0);
    VARIABLE cast_1 : signed(16 DOWNTO 0);
    VARIABLE cast_2 : signed(16 DOWNTO 0);
    VARIABLE cast_3 : signed(16 DOWNTO 0);
    VARIABLE cast_4 : signed(16 DOWNTO 0);
    VARIABLE cast_5 : signed(16 DOWNTO 0);
    VARIABLE cast_6 : signed(16 DOWNTO 0);
    VARIABLE cast_7 : signed(16 DOWNTO 0);
    VARIABLE cast_8 : signed(16 DOWNTO 0);
    VARIABLE cast_9 : signed(16 DOWNTO 0);
    VARIABLE cast_10 : signed(16 DOWNTO 0);
  BEGIN
    cast_0 := to_signed(16#00000#, 17);
    cast_2 := to_signed(16#00000#, 17);
    cast_4 := to_signed(16#00000#, 17);
    cast_6 := to_signed(16#00000#, 17);
    cast_8 := to_signed(16#00000#, 17);
    cast_10 := to_signed(16#00000#, 17);
    cast := to_signed(16#00000#, 17);
    cast_1 := to_signed(16#00000#, 17);
    cast_3 := to_signed(16#00000#, 17);
    cast_5 := to_signed(16#00000#, 17);
    cast_7 := to_signed(16#00000#, 17);
    cast_9 := to_signed(16#00000#, 17);
    twdlIn_re := twiddleReg_re;
    twdlIn_im := twiddleReg_im;
    IF twdl45Reg = '1' THEN 
      CASE twdlOctantReg IS
        WHEN "000" =>
          twdlIn_re := to_signed(16#2D41#, 16);
          twdlIn_im := to_signed(-16#2D41#, 16);
        WHEN "010" =>
          twdlIn_re := to_signed(-16#2D41#, 16);
          twdlIn_im := to_signed(-16#2D41#, 16);
        WHEN "100" =>
          twdlIn_re := to_signed(-16#2D41#, 16);
          twdlIn_im := to_signed(16#2D41#, 16);
        WHEN OTHERS => 
          twdlIn_re := to_signed(16#2D41#, 16);
          twdlIn_im := to_signed(-16#2D41#, 16);
      END CASE;
    ELSE 
      CASE twdlOctantReg IS
        WHEN "000" =>
          NULL;
        WHEN "001" =>
          cast := resize(twiddleReg_im, 17);
          cast_0 :=  - (cast);
          twdlIn_re := cast_0(15 DOWNTO 0);
          cast_5 := resize(twiddleReg_re, 17);
          cast_6 :=  - (cast_5);
          twdlIn_im := cast_6(15 DOWNTO 0);
        WHEN "010" =>
          twdlIn_re := twiddleReg_im;
          cast_7 := resize(twiddleReg_re, 17);
          cast_8 :=  - (cast_7);
          twdlIn_im := cast_8(15 DOWNTO 0);
        WHEN "011" =>
          cast_1 := resize(twiddleReg_re, 17);
          cast_2 :=  - (cast_1);
          twdlIn_re := cast_2(15 DOWNTO 0);
          twdlIn_im := twiddleReg_im;
        WHEN "100" =>
          cast_3 := resize(twiddleReg_re, 17);
          cast_4 :=  - (cast_3);
          twdlIn_re := cast_4(15 DOWNTO 0);
          cast_9 := resize(twiddleReg_im, 17);
          cast_10 :=  - (cast_9);
          twdlIn_im := cast_10(15 DOWNTO 0);
        WHEN OTHERS => 
          twdlIn_re := twiddleReg_im;
          twdlIn_im := twiddleReg_re;
      END CASE;
    END IF;
    twdl_5_1_re_tmp <= twdlIn_re;
    twdl_5_1_im_tmp <= twdlIn_im;
  END PROCESS Radix22TwdlOctCorr_output;


  twdl_5_1_re <= std_logic_vector(twdl_5_1_re_tmp);

  twdl_5_1_im <= std_logic_vector(twdl_5_1_im_tmp);

  intdelay_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      twdl_5_1_vld <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        twdl_5_1_vld <= twdlAddrVld;
      END IF;
    END IF;
  END PROCESS intdelay_2_process;


END rtl;

