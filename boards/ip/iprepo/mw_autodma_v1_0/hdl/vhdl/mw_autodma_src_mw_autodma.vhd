-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\mw_autodma\mw_autodma_src_mw_autodma.vhd
-- Created: 2020-12-16 17:10:04
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 3.90625e-09
-- Target subsystem base rate: 3.90625e-09
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        3.90625e-09
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- Buffer_Pointer                ce_out        3.90625e-09
-- DMA_Status                    ce_out        3.90625e-09
-- dma_status_db                 ce_out        3.90625e-09
-- wr_addr_db                    ce_out        3.90625e-09
-- wr_len_db                     ce_out        3.90625e-09
-- wr_valid_db                   ce_out        3.90625e-09
-- wr_data_db                    ce_out        3.90625e-09
-- wr_ready_db                   ce_out        3.90625e-09
-- wr_complete_db                ce_out        3.90625e-09
-- wr_m2s_wr_addr                ce_out        3.90625e-09
-- wr_m2s_wr_len                 ce_out        3.90625e-09
-- wr_m2s_wr_valid               ce_out        3.90625e-09
-- wr_data                       ce_out        3.90625e-09
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: mw_autodma_src_mw_autodma
-- Source Path: mw_autodma/mw_autodma
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY mw_autodma_src_mw_autodma IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        Length                            :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Buffer_Address_1                  :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Buffer_Address_2                  :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Buffer_Address_3                  :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Enable                            :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Count                             :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        s_axis_tvalid                     :   IN    std_logic;
        s_axis_tdata                      :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        s_axis_tuser                      :   IN    std_logic;
        s_axis_tlast                      :   IN    std_logic;
        wr_s2m_wr_ready                   :   IN    std_logic;
        wr_s2m_wr_complete                :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        Buffer_Pointer                    :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        DMA_Status                        :   OUT   std_logic_vector(5 DOWNTO 0);  -- ufix6
        dma_status_db                     :   OUT   std_logic_vector(5 DOWNTO 0);  -- ufix6
        wr_addr_db                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        wr_len_db                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        wr_valid_db                       :   OUT   std_logic;
        wr_data_db                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        wr_ready_db                       :   OUT   std_logic;
        wr_complete_db                    :   OUT   std_logic;
        wr_m2s_wr_addr                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        wr_m2s_wr_len                     :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        wr_m2s_wr_valid                   :   OUT   std_logic;
        wr_data                           :   OUT   std_logic_vector(31 DOWNTO 0)  -- uint32
        );
END mw_autodma_src_mw_autodma;


ARCHITECTURE rtl OF mw_autodma_src_mw_autodma IS

  -- Component Declarations
  COMPONENT mw_autodma_src_Direct_Memory_Access
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Length                          :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Count                           :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Buffer_Address_1                :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Buffer_Address_2                :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Buffer_Address_3                :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Enable_DMA                      :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Valid_In                        :   IN    std_logic;
          Data_In                         :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          Start_In                        :   IN    std_logic;
          wr_ready_wr_ready               :   IN    std_logic;
          wr_ready_wr_complete            :   IN    std_logic;
          wr_data                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          wr_m2s_wr_addr                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          wr_m2s_wr_len                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          wr_m2s_wr_valid                 :   OUT   std_logic;
          Buffer_Pointer                  :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          DMA_Status                      :   OUT   std_logic_vector(5 DOWNTO 0);  -- ufix6
          debug_signals_dma_status        :   OUT   std_logic_vector(5 DOWNTO 0);  -- ufix6
          debug_signals_wr_m2s_wr_addr    :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          debug_signals_wr_m2s_wr_len     :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          debug_signals_wr_m2s_wr_valid   :   OUT   std_logic;
          debug_signals_wr_data           :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
          debug_signals_wr_ready          :   OUT   std_logic;
          debug_signals_wr_complete       :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : mw_autodma_src_Direct_Memory_Access
    USE ENTITY work.mw_autodma_src_Direct_Memory_Access(rtl);

  -- Signals
  SIGNAL Direct_Memory_Access_out1        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Direct_Memory_Access_out2_wr_addr : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Direct_Memory_Access_out2_wr_len : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Direct_Memory_Access_out2_wr_valid : std_logic;
  SIGNAL buffer_rsvd                      : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL y                                : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL Direct_Memory_Access_out5_dma_status : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL Direct_Memory_Access_out5_wr_m2s_wr_addr : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Direct_Memory_Access_out5_wr_m2s_wr_len : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Direct_Memory_Access_out5_wr_m2s_wr_valid : std_logic;
  SIGNAL Direct_Memory_Access_out5_wr_data : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Direct_Memory_Access_out5_wr_ready : std_logic;
  SIGNAL Direct_Memory_Access_out5_wr_complete : std_logic;
  SIGNAL dma_status_1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL wr_addr                          : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL wr_len                           : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL wr_valid                         : std_logic;
  SIGNAL wr_data_1                        : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL wr_ready                         : std_logic;
  SIGNAL wr_complete                      : std_logic;

BEGIN
  u_Direct_Memory_Access : mw_autodma_src_Direct_Memory_Access
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              Length => Length,  -- uint32
              Count => Count,  -- uint32
              Buffer_Address_1 => Buffer_Address_1,  -- uint32
              Buffer_Address_2 => Buffer_Address_2,  -- uint32
              Buffer_Address_3 => Buffer_Address_3,  -- uint32
              Enable_DMA => Enable,  -- uint32
              Valid_In => s_axis_tvalid,
              Data_In => s_axis_tdata,  -- uint32
              Start_In => s_axis_tuser,
              wr_ready_wr_ready => wr_s2m_wr_ready,
              wr_ready_wr_complete => wr_s2m_wr_complete,
              wr_data => Direct_Memory_Access_out1,  -- uint32
              wr_m2s_wr_addr => Direct_Memory_Access_out2_wr_addr,  -- uint32
              wr_m2s_wr_len => Direct_Memory_Access_out2_wr_len,  -- uint32
              wr_m2s_wr_valid => Direct_Memory_Access_out2_wr_valid,
              Buffer_Pointer => buffer_rsvd,  -- ufix2
              DMA_Status => y,  -- ufix6
              debug_signals_dma_status => Direct_Memory_Access_out5_dma_status,  -- ufix6
              debug_signals_wr_m2s_wr_addr => Direct_Memory_Access_out5_wr_m2s_wr_addr,  -- uint32
              debug_signals_wr_m2s_wr_len => Direct_Memory_Access_out5_wr_m2s_wr_len,  -- uint32
              debug_signals_wr_m2s_wr_valid => Direct_Memory_Access_out5_wr_m2s_wr_valid,
              debug_signals_wr_data => Direct_Memory_Access_out5_wr_data,  -- uint32
              debug_signals_wr_ready => Direct_Memory_Access_out5_wr_ready,
              debug_signals_wr_complete => Direct_Memory_Access_out5_wr_complete
              );

  dma_status_1 <= unsigned(Direct_Memory_Access_out5_dma_status);

  dma_status_db <= std_logic_vector(dma_status_1);

  wr_addr <= unsigned(Direct_Memory_Access_out5_wr_m2s_wr_addr);

  wr_addr_db <= std_logic_vector(wr_addr);

  wr_len <= unsigned(Direct_Memory_Access_out5_wr_m2s_wr_len);

  wr_len_db <= std_logic_vector(wr_len);

  wr_valid <= Direct_Memory_Access_out5_wr_m2s_wr_valid;

  wr_data_1 <= unsigned(Direct_Memory_Access_out5_wr_data);

  wr_data_db <= std_logic_vector(wr_data_1);

  wr_ready <= Direct_Memory_Access_out5_wr_ready;

  wr_complete <= Direct_Memory_Access_out5_wr_complete;

  ce_out <= clk_enable;

  Buffer_Pointer <= buffer_rsvd;

  DMA_Status <= y;

  wr_valid_db <= wr_valid;

  wr_ready_db <= wr_ready;

  wr_complete_db <= wr_complete;

  wr_m2s_wr_addr <= Direct_Memory_Access_out2_wr_addr;

  wr_m2s_wr_len <= Direct_Memory_Access_out2_wr_len;

  wr_m2s_wr_valid <= Direct_Memory_Access_out2_wr_valid;

  wr_data <= Direct_Memory_Access_out1;

END rtl;

