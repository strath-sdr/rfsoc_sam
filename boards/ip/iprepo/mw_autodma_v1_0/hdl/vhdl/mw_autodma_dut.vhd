-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\mw_autodma\mw_autodma_dut.vhd
-- Created: 2020-12-16 17:10:11
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: mw_autodma_dut
-- Source Path: mw_autodma/mw_autodma_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY mw_autodma_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        Length                            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        Buffer_Address_1                  :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        Buffer_Address_2                  :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        Buffer_Address_3                  :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        Enable                            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        Count                             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        s_axis_tvalid                     :   IN    std_logic;  -- ufix1
        s_axis_tdata                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        s_axis_tuser                      :   IN    std_logic;  -- ufix1
        s_axis_tlast                      :   IN    std_logic;  -- ufix1
        wr_s2m_wr_ready                   :   IN    std_logic;  -- ufix1
        wr_s2m_wr_complete                :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;  -- ufix1
        Buffer_Pointer                    :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        DMA_Status                        :   OUT   std_logic_vector(5 DOWNTO 0);  -- ufix6
        dma_status_db                     :   OUT   std_logic_vector(5 DOWNTO 0);  -- ufix6
        wr_addr_db                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        wr_len_db                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        wr_valid_db                       :   OUT   std_logic;  -- ufix1
        wr_data_db                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        wr_ready_db                       :   OUT   std_logic;  -- ufix1
        wr_complete_db                    :   OUT   std_logic;  -- ufix1
        wr_m2s_wr_addr                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        wr_m2s_wr_len                     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        wr_m2s_wr_valid                   :   OUT   std_logic;  -- ufix1
        wr_data                           :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
        );
END mw_autodma_dut;


ARCHITECTURE rtl OF mw_autodma_dut IS

  -- Component Declarations
  COMPONENT mw_autodma_src_mw_autodma
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          Length                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Buffer_Address_1                :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Buffer_Address_2                :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Buffer_Address_3                :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Enable                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Count                           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          s_axis_tvalid                   :   IN    std_logic;  -- ufix1
          s_axis_tdata                    :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          s_axis_tuser                    :   IN    std_logic;  -- ufix1
          s_axis_tlast                    :   IN    std_logic;  -- ufix1
          wr_s2m_wr_ready                 :   IN    std_logic;  -- ufix1
          wr_s2m_wr_complete              :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          Buffer_Pointer                  :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          DMA_Status                      :   OUT   std_logic_vector(5 DOWNTO 0);  -- ufix6
          dma_status_db                   :   OUT   std_logic_vector(5 DOWNTO 0);  -- ufix6
          wr_addr_db                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          wr_len_db                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          wr_valid_db                     :   OUT   std_logic;  -- ufix1
          wr_data_db                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          wr_ready_db                     :   OUT   std_logic;  -- ufix1
          wr_complete_db                  :   OUT   std_logic;  -- ufix1
          wr_m2s_wr_addr                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          wr_m2s_wr_len                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          wr_m2s_wr_valid                 :   OUT   std_logic;  -- ufix1
          wr_data                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : mw_autodma_src_mw_autodma
    USE ENTITY work.mw_autodma_src_mw_autodma(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL s_axis_tvalid_sig                : std_logic;  -- ufix1
  SIGNAL s_axis_tuser_sig                 : std_logic;  -- ufix1
  SIGNAL s_axis_tlast_sig                 : std_logic;  -- ufix1
  SIGNAL wr_s2m_wr_ready_sig              : std_logic;  -- ufix1
  SIGNAL wr_s2m_wr_complete_sig           : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL Buffer_Pointer_sig               : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL DMA_Status_sig                   : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dma_status_db_sig                : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL wr_addr_db_sig                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL wr_len_db_sig                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL wr_valid_db_sig                  : std_logic;  -- ufix1
  SIGNAL wr_data_db_sig                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL wr_ready_db_sig                  : std_logic;  -- ufix1
  SIGNAL wr_complete_db_sig               : std_logic;  -- ufix1
  SIGNAL wr_m2s_wr_addr_sig               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL wr_m2s_wr_len_sig                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL wr_m2s_wr_valid_sig              : std_logic;  -- ufix1
  SIGNAL wr_data_sig                      : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_mw_autodma_src_mw_autodma : mw_autodma_src_mw_autodma
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              Length => Length,  -- ufix32
              Buffer_Address_1 => Buffer_Address_1,  -- ufix32
              Buffer_Address_2 => Buffer_Address_2,  -- ufix32
              Buffer_Address_3 => Buffer_Address_3,  -- ufix32
              Enable => Enable,  -- ufix32
              Count => Count,  -- ufix32
              s_axis_tvalid => s_axis_tvalid_sig,  -- ufix1
              s_axis_tdata => s_axis_tdata,  -- ufix32
              s_axis_tuser => s_axis_tuser_sig,  -- ufix1
              s_axis_tlast => s_axis_tlast_sig,  -- ufix1
              wr_s2m_wr_ready => wr_s2m_wr_ready_sig,  -- ufix1
              wr_s2m_wr_complete => wr_s2m_wr_complete_sig,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              Buffer_Pointer => Buffer_Pointer_sig,  -- ufix2
              DMA_Status => DMA_Status_sig,  -- ufix6
              dma_status_db => dma_status_db_sig,  -- ufix6
              wr_addr_db => wr_addr_db_sig,  -- ufix32
              wr_len_db => wr_len_db_sig,  -- ufix32
              wr_valid_db => wr_valid_db_sig,  -- ufix1
              wr_data_db => wr_data_db_sig,  -- ufix32
              wr_ready_db => wr_ready_db_sig,  -- ufix1
              wr_complete_db => wr_complete_db_sig,  -- ufix1
              wr_m2s_wr_addr => wr_m2s_wr_addr_sig,  -- ufix32
              wr_m2s_wr_len => wr_m2s_wr_len_sig,  -- ufix32
              wr_m2s_wr_valid => wr_m2s_wr_valid_sig,  -- ufix1
              wr_data => wr_data_sig  -- ufix32
              );

  s_axis_tvalid_sig <= s_axis_tvalid;

  s_axis_tuser_sig <= s_axis_tuser;

  s_axis_tlast_sig <= s_axis_tlast;

  wr_s2m_wr_ready_sig <= wr_s2m_wr_ready;

  wr_s2m_wr_complete_sig <= wr_s2m_wr_complete;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  Buffer_Pointer <= Buffer_Pointer_sig;

  DMA_Status <= DMA_Status_sig;

  dma_status_db <= dma_status_db_sig;

  wr_addr_db <= wr_addr_db_sig;

  wr_len_db <= wr_len_db_sig;

  wr_valid_db <= wr_valid_db_sig;

  wr_data_db <= wr_data_db_sig;

  wr_ready_db <= wr_ready_db_sig;

  wr_complete_db <= wr_complete_db_sig;

  wr_m2s_wr_addr <= wr_m2s_wr_addr_sig;

  wr_m2s_wr_len <= wr_m2s_wr_len_sig;

  wr_m2s_wr_valid <= wr_m2s_wr_valid_sig;

  wr_data <= wr_data_sig;

END rtl;

